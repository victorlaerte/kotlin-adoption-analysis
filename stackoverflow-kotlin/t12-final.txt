2456	q2456	0.8743741669101825 "Dagger2- Retrofit is not injecting in ApiHelperImpl"," Hi I am trying to inject in class. I have below module and component. AppComponent.kt AppModule.kt PartnerApplication.kt ApiHelper.kt ApiHelperImpl.kt LoginActivity.kt LoginViewModel.kt LoginActivityModule.kt ActivityBuilder.kt I am getting an error Why is not injecting in ApiHelperImpl class. "
1168	q1168	0.8042944248516608 "Dagger2 Compilation Issue in kotlin"," I am trying to learn dependency injection using Dagger2. I have created few custom scopes and Qualifier. I have created an application component where I wanted to inject certain global dependencies and also I have created an Activity component which will return certain instances based upon activity context. Now when I try to inject global instances in the Activity I am getting error as follows: Qualifiers ActivityContext.kt ApplicationContext.kt Scopes ActivityScope.kt ApplicationScope.kt Components ActivityComponent.kt Used in Injecting Activity class. FirebaseComponent.kt Used in injecting Application class. Modules ActivityModule.kt ApplicationModule.kt FirebaseAuthModule.kt NetworkModule.kt FirebaseChatApp.kt An Application Class BaseActivity.kt Super classes for all activities MainActivity.kt Where Objects should get Injected. What should I do to resolve this error. And what is the correct way of using DI. Since I am new to it. I am getting little confused. "
3122	q3122	0.793142632626894 "Dagger 2 share object instance between presenters"," I am developing an application that has a few services, including a . I would like to have the same instance in all of my presenters (for each activity). How would I go about doing this? "
3121	q3121	0.789449945764799 "Dagger2 dependent components"," In my app I have a component with Application scope (same as Singleton) that provides a ViewModel Factory, and a dependent component with Activity scope that injects the factory in a fragment. The application component is defined as follows: The view model module is defined as follows: The activity scope component is defined as follows: When I try to inject the viewmodel factory in the fragment I get this error: If I update the activity component to include the view model module, like this Then it compiles. My understanding is that dependent components have access to the injected members from the parent component if the parent component explicitly provides those members, as I do here with the so why do I still need to provide the viewmodel module in the activity scope component? "
4184	q4184	0.7815947155720141 "Error injecting Kotlin using Dagger"," I am trying to inject the ModelViewFactory object in the ViewModel and I get the following error. Have been working on this for days cant seem to figure it out. Here is my ViewModelFactory } Here is the Fragment where I am trying to inject the viewModelFactory } Here is the ViewModel Module where I have the Provider methods for the ViewModels And here is the FragmentBuilderModule as well Here is the App Component "
3162	q3162	0.7681268420600122 "Dagger2 and qualifiers in dependent components"," I have an app component and a dependent component. The app component declares explicit dependencies, and the dependent component can inject those. However, when I have a dependency that I have to disambiguate with a @Qualifier, the dependent component is not able to inject that dependency. This is the app component This is the scheduler module: This is the qualifier: And this is the dependent component: This is how the scheduler is injected in the fragment: So why can the dependent component inject the bitmap cache, declared in the parent component, but not the UI scheduler? This is the error I get: "
3190	q3190	0.7399780933323595 "Dagger 2 not injecting sharedPreference"," Hi i am new to dagger 2 and trying to inject an instance of sharedPreference inside my MyActivity class below: Here is the component and modules I get the error below: "
5028	q5028	0.7317729012326795 "from one dagger2 module how to access the SharedPreferences provided in another dagger2 module"," Having the SharedPreferences provided from one dagger2 module, in another dagger2 module would like to use it, how to do it? the code below seems not working. /** the component */ /** the module 1 */ /** the module 2 */ "
2549	q2549	0.7308928776886012 "How to have implementation of interface repository in other project module in AndroidStudio using Dagger2 and Kotlin"," I want to be able to have 2 different reactive implementation of the interface that is getting user location in other project module in AndroidStudio. So to be specific it can be by using gms, or by just native android LocationManager. Here is my repository interface: So for now, i implement this interface here, in class that is in the same project module in AndroidStudio: So everything is fine, but now i want to have the gms implementation of this in different project module(so i don't need to have gms dependencies in the gradle) and also the native implementation to the other module in Android Studio. The final structure of the project in AndroidStudio will be like location_core, location_gms, location_native. The location_core must not be aware of location_gms and native, i guess in opposite to them - they will have the dependency to location_core. So now, i i have just location_core project module and a LocationClient class, which will provide the context: It is using some Dagger Component, which provide him all the implementation of different objects. So i want to move this LocationClient or make it abstract in location_core project module and move the implementation of it in each location_gms and location_native project module in AndroidStudio. So the LocationClient class in each of them will provide the different implementation of this RxRepository. For now in each location_gms and location_native project module i have just implementation class which implements the repository rxLocationRepository(which i move from the implementation written above) on its own way. The problem is i don't know exactly how to manage all of this with Dagger. Now i am using Dagger like this in my location_core, here is the LocationComponent: and its module: So how to write the actual LocationClient in each of the modules - location_gms and the location_native? How to provide the implementation of the rxLocationRepository which is in each of the location_gms and location_native project modules with Dagger, so that i can just use the interface RxLocationRepository in my location_core module and don't be bother of its implementation, because it will be in each project module? Of course i must point, that those 3 modules never be together i guess, it will be 2 modules in each build_variant i guess. So i have to get rid of the google services dependency in location_core project module build.gradle. UPDATE How i can actually don't have Dagger component in my location_core, in which i am using it in tests like: "
3548	q3548	0.727539980603544 "How to @Inject members in BaseActivity using dagger.android?"," This is my scenario: I want all my Activities to inherit from Within the , I want to inject (it helps me to manage the backstack and navigate between activities): The class needs a in its constructor: I want to provide from a object in : This is the rest of my components and modules: AppComponent.kt AppModule.kt ActivityBindingModule.kt BaseActivityModule.kt This is the compilation error message: "
5512	q5512	0.6999430818901531 "Inject dependencies besides activities and fragments"," Why can I just inject activity and fragments? I can not inject into the presenter or into any other class I have seen many other projects that do this but in mine I can not do the job. I'm going to give an example of a location that occurs in my code problem: In the ListRepositoryFragment there is a mPresenter: ListRepositoryMVPPresenter, it is injected, Dagger does its job, but inside the BasePresenter there is a CompositeDisposable: CompositeDisposable that is not injected in any way !!! *The critical point of my doubt is in the ListRepositoryMVPPresenter and BasePresenter classes at the end of this text Error: Estrutura de Pastas de DI App DIAppComponent: DIAppModule: DIBuilderModule: GitApplication: Estrutura de Pastas de DI UI Common: DIDashboardModule : DIBaseActivityModule : DIListRepositoryModule: BaseActivity: BaseFragment: BasePresenter: BaseInteractor: ListRepositoryFragment: ListRepositoryPresenter: "
781	q781	0.6892391203583222 "Kotlin Dagger 2 cannot provide Interactor"," I've started using Dagger 2 and faced strange issue. I have 4 modules, 3 of them in ApplicationComponent and the other one has different Scope (UsersScope). Problem with injecting into Here is my classes "
454	q454	0.6705843975881909 "Dagger + Kotlin not injecting"," I studying Dagger 2 for DI and I just did this code to inject the Retrofit: NetModule.kt AppModule.kt NetComponent.kt: CustomApplication.kt Then in my activity: So, this code should work, right? The dependency should be added... But when I run my app... I get this: So the Retrofit is not being injected. What am I missing? Any help is welcome! "
1934	q1934	0.6692755292454864 "Dagger 2, can not inject presenter in my activity"," I am new in Dagger2. I have a problem with inject presenter in my activity I try to resolve my problem after read this article https://android.jlelse.eu/inject-interfaces-without-providing-in-dagger-2-618cce9b1e29 but it was not helpe me. I hope someone help me, I spend all day tring to resolve it... here is my modules: here is my component: here is my App class: here is my activity: here is my presenter: here is interfaces for presenter and view: and here base classes: and always when i build i have this error: how can I resolve it? "
5059	q5059	0.6603471748321833 "Dagger2 AndroidInjector Class cannot be provided in ViewModel constructor"," Im using Dagger2 2.15 with AndroidInjector to setup my project, and I have run into an issue where I cant provide instances of my class into ViewModel. It fails when I try to run the code. How do I write my Activity module to provide dependencies in the ViewModel constructor? The error I get is: The code compiles if I move the function from to , but I need the Activity and I cant get my head around why it breaks. My : In my : The : The : The provided class: "
3538	q3538	0.648135454851976 "Dagger AndroidInjector cannot be provided without an @Provides-annotated method"," I've done my Android projects MainActivity by means of the MVP pattern. So in my MainPresenter I want to inject a dynamic String, which then shall populate a TextView for instance: whereas the StringForTextView annotation qualifier is defined as: then I also have my Interface: which is implemented as: then in my module: The problem is, that I get an error What am I missing? "
3384	q3384	0.6467352554487911 "Dependency injection in non-global activity scope done right. How to provide special MyActivity as Activity"," I am using dependency injection to provide global objects () and non global objects for activities only (). Now I wonder if I did it right and if it could be done better. The most interesting part of this DI implementation is the injection of the object into 2 different activities with restricted scope Here is the code The main app component The appclication module The module for the activities And now I want to inject a new to the and a new one to the . The approach is having a module for each activity like you see above in the annotation. The implementations of the 2 files look like this And The Question: 1) Now the and look very similar. Is there a better approach to provide to both activities without making them and withouth creating a module for each activity (becaues only needs an , not a special sublcass)? I had something in mind like that it only takes an instead of a specific . But how can I tell dagger to provide the as 2) And beside that optimizing in 1), is this a correct implementation? Update 1 I have solved it by the following implementation. Is this the right way to do this? Module that provides the as Module that provides the as A Manager module that is only And the Android injector for the activities "
3662	q3662	0.6447201117039297 "Dagger-Android: Missing setters for modules"," DataModule: App: ApplicationComponent: I get error: "
1972	q1972	0.6433797995179245 "Dagger injection not working in kotlin"," Someone helps me to point out that why my code does not work. I try to figure out but I cannot find out the problem I try to inject presenter but I got the error: It seems that the presenter has been not injected AppModule AppComponent App This is the MainActivity where I want inject presenter to This is MainActivityPresenter which implements MainActivityContract.Presenter Edit: I managed to solve it myself: For all android beginner as I am. When we declare App extends Application. We must declare it in manifest as well "
2230	q2230	0.6363747417009757 "Why using Scopes and Singleton annotations in Dagger2 with kotlin causes error while compiling?"," The App is working fine unless i add @MainScope or @Singleton annotation before some \"provides\" method, then i am getting gradle build error The logs contains this: And here is my module: MainScope: EDIT MainComponent: EDIT 2: Here is whole project on github "
2380	q2380	0.6331751215885322 "New Architecture with Dagger and Kotlin"," I have a problem with New Architecture components in Kotlin, when I create ViewModel component in recomended way (in onCreate() method) the result is as suposed: after activity orientation changes, I got the same instance of ViewModel as before Here is the way i create this But when I have used Dagger for inject ListViewModel I got new instance of ListViewModel every time Activity was recreated. Here is a code of Dagger ListActivityModel. } Then ListActivity onCreate() method looks like: And there is what I have notice after logging: The error I have received : comes from Android class HolderFragment with package android.arch.lifecycle. There is something what I missed working with Dagger and new arch components? "
3563	q3563	0.6324112996987579 "Android - Kotlin - Dagger 2 - Qualifier Annotation with Member Injection"," I am trying to inject a String into my class that is qualified by an annotation like this: When working with constructor injection, everything is working well. Now, as I am implementing a Service, I need to lazily inject my : My Provider looks like this: The compiler tells me, that I need to implement a -method for my String, although it is in my Object-Graph. I tested this with using in the provider and Service: Dagger can now resolve the String and correctly inject it into my Service. Obviously I am missing something about the Qualifier-Annotation. Can anyone please help out? Thank you. "
3356	q3356	0.6240605505617184 "Dagger 2 Activity cannot be provided without an @Provides- or @Produces-annotated method"," I'm new to Dagger and I'm trying to implement a class that inherits from a class where injection is taking place. Things broke when I took out injection of one component in MainActivity and inherited it from BaseActivity. My AppComponentClass: My ActivityModule class: my ApplicationModule class: My two classes (both in kotlin) The error(s): Using Dagger 2 ver 2.9 Android Studio 3.0 both Kotlin and Java "
3364	q3364	0.6189324073623319 "Refer class from Module A to Module C through Module B gradle"," How can I refer my code from another module? I have a Module A which implements Module B. Module B implements Module C which contains classes that i need to access in Module A. Module A contains class Foo {} and implements: Module B implements: Module C contains Class Bar {} I can easily access classes which are located in module BHow can i access class Bar {} (module C) from class Foo {} (module A)? Is there any way to achive this event in gradle? "
3334	q3334	0.6188390596645649 "How to get LifecycleOwner in WearableActivity?"," I am facing a problem when I try to use LiveData from WearableActivity: It worked when I was working with activity extending AppCompatActivity but it looks like WearableActivity does not implement LifecycleOwner interface, altough it does own a lifecycle, right? (observe method requires LifecycleOwner as the first argument). How can I make it work? "
3908	q3908	0.6188390596645649 "kotlin + Dagger2 : cannot be provided without an @Provides-annotated method"," I don't understand why am I getting this error: KotlinApplication.kt AppInjector.kt ApplicationComponent.kt AppModule.kt ViewModelModule.kt ViewModelKey.kt KotlinViewModelFactory.kt I have already wasted much amount of time on finding error in my code, if someone can help me on this. :( "
2219	q2219	0.6173220014384925 "Dagger2 Injection compile error on ViewModel"," I'm using Dagger2 latest Android Injection model (with class) in my application. Until now, everything was working fine, including injection, but I only had parameterless constructors on my ViewModels. While implementing new features, I've created a ViewModel extending (I need the context in that viewmodel). needs an as constructor parameter, so I've added it as injected parameter in the constructor of my ViewModel. Since then, Dagger2 does not compile with following error : I understand this means my object is not available in the graph, but I'm adding it in my App class, thus I don't really know how to correct this. Here are the classes implicated in my process. I'll mark any changes made for my last feature : AppComponent.kt : AppModule.kt : ActivityBuilder.kt : ViewModelModule.kt : JumpTrackerViewModelFactory.kt : ResultActivity.kt : ResultViewModel.kt : AltimeterActivity.kt (this class is new): AltimeterActivityViewModel.kt (This class is new): Moreover, I've modified my code in order to try App injection, and it's working, so I know app is effectively injected correctly : AppModule.kt : AltimeterActivityViewModel.kt : If anybody has any clue on what's happening, thank you for sharing your thoughts! "
2784	q2784	0.6119330165103173 "Android: Internal Compiler error while using Dagger 2 (Kotlin)"," I am trying to use Dagger 2 in Android. Implementation is very straightforward. Below are dagger 2 related s and s: ApplicationComponent.kt MainActivityComponent.kt AppModule.kt GoogleApiClientModule.kt GooglePlacesClientModule.kt MainActivityModule.kt Below is my Main Activity where I am injecting the above components: Below is my where Dagger is initialized: When I run the app I am getting a internal compiler error. Below are my IDE logs: NOTE: MainActivityComponent is a SubComponent of ApplicationComponent. Even though ApplicationComponent has only one module at present, Further modules will be added in the future "
2442	q2442	0.6087574337003157 "Dagger 2 cannot access Retrofit"," I'm trying to provide an instance of Retrofit to my Repository using Dagger 2 (with Android module). Buy I'm facing the error: Other instances like Picasso was injected with success, I just have problems with Retrofit. My Module My Application component App Component Activity Builder My repository' My Remote repository Gradle Log Thank you! "
2212	q2212	0.6087574337003157 "Error: com.app.android.dagger.component.AppComponent (unscoped) may not reference scoped bindings:"," Hi I am using dagger2 in my android application. I have AppModule and AppComponent which provides . AppModule.kt AppComponent.kt In my application class, I am injecting but I am getting value null of it when I am logging. Stacktrace: When I remove from providesConnectivityManager then it works well. Does anyone know whats problem here ? "
3416	q3416	0.6076026673827041 "Kotlin Dagger 2.11"," I am trying to inject Dagger 2.11 Retrofit in Fragment, but i am not able to inject, 1) The issue is AndroidInjection.inject(this) needs DaggerFragment and i can not change the BaseFragment to DaggerFragment object because it causes issue while replace the fragment 2) I am little confused with dagger architecture too, as i have seen many demo code for dagger 2.11 or above, They are creating Module for each activities. so do i need to create seperate module and component to each activities "
5572	q5572	0.604432170475914 "Dagger 2.15 - How to inject a dependency in Application class"," I am unable to inject a depency in DaggerApplication class The relevant classes are as follows Application Component: AppModule class: Not sure what is missing. "
1616	q1616	0.6035428421574268 "Confusing error with Dagger 2 in Android"," I've been trying to set up a dependency injection but there is something that I can't deal with. I almost understand Dagger expect some weird issues like this one. Here is the log error: Here is the code: ApplicationComponent.kt ApplicationModule.kt TorrentComponent.kt TorrentModule.kt NetworkModuke.kt TorrentsActivity.kt Thank you so much! "
2016	q2016	0.6022115685442015 "Dagger can not provide injection with Kotlin"," I have this issue when I try to use Kotlin and Dagger 2 . \"interface cannot be provided without an @Provides- or @Produces-annotated method.” This is my Module class: Audio.kt is interface and Dagger has problem to inject it. Inside the activity module I am returning AndroidAudio instance, which implements Audio interface. I am not sure what is the problem here. In Java I have had many times injection of interfaces and I never had this issue before. If somebody can help me I will be so happy. Thanks! "
1797	q1797	0.5980372477161499 "Kotlin + Dagger - inject Map for ViewModel factory"," I'm using the new Architecture Components with Dagger2 and I would like to inject my ViewModels using a Factory class. The Factory class is itself injectable. This all works well when the Factory class is defined in Java, but when I convert it to Kotlin, Dagger2 does not know how to generate the Map for the constructor, while in Java it knows how to do so. I presume the difference is that, after conversion, the Factory class uses the Map from the kotlin package, as opposed to from java.util.Map package. How can I get Dagger2 to generate the map for the Factory constructor? Here's the Factory class and this is the error I tried creating a module to provide the map, but that didn't help. "
363	q363	0.5964999388958664 "rx.Scheduler cannot be provided without an @Provides- or @Produces-annotated method"," I do have two custom annotations and I'm using them in my module Of course module is added to my component, and when i'm trying to inject them it says injecting Funny think is that i'm using almost same think with injecting Gson for my ApiClient and it works perfectly In additional i can say that i do have same modules / providers structure in my java projects and it works just fine. "
4379	q4379	0.5919905425908518 "Room,Kotlin,Dagger 2.15 android.app.Application cannot be provided without an @Inject constructor or from an @Provides-annotated method"," I have the following implementation with dagger for Room Module. This causes an error on injecting the at the class. Following is my Code: App AppModule RoomModule } AppComponent HomeViewModel ResultRepository On building this i'm getting the error as :app:kaptDebugKotlin FAILED FAILURE: Build failed with an exception. "
1979	q1979	0.5892208904369481 "Kotlin dagger 2 Android ViewModel injection error"," I'm trying to use dagger 2 on my Android application to inject the new ViewModel from arch android library. From what I see on this sample https://github.com/googlesamples/android-architecture-components/tree/e33782ba54ebe87f7e21e03542230695bc893818/GithubBrowserSample I need to use this: And my factory is: But the project doesn't compile :( I have this error (Map<...> cannot be provided without an @Provides-annotated method.): Any idea on how fix this ? "
3875	q3875	0.5797029209441419 "Dagger 2 Kotlin - @Named qualifier for @Binds method"," I wanted to have @Named qualifier for object that's returned from @Binds method, but I noticed that's only possible through static provides method, which I couldn't figure out in practical implementation. So below is what I wanted to achieve. I have a custom UserScope, which would contain all activities/fragments/viewModels after user logged in, I have LoginViewModel in AuthViewModelModule and LeadViewModel an other VM in UserViewModelModule both VMModule binds VMProvider.Factory and for that reason I need to have @Named qualifier for the VMFactory instance, so I could inject @Named ones in respective activities/fragments. "
5354	q5354	0.5797029209441419 "Dagger-android share dependencies between Activities"," I'm using dagger-android for DI. There're a few common dependencies I want to provide to every Activity. They depend on an Activity class but don't relay on a certain Activity implementation. Like this: Now I have to write the same code at every ActivityModule: I tried to provide these dependencies via but it turns out that Dagger generates separate Submodules for each Activity, and we can access to an Activity dependency only at the certain modules ( and at this example): So how can I provide such dependencies without duplicating code in every ActivityModule? "
675	q675	0.5783795081780545 "Dagger2 not working in android"," I have problem using dagger2 I create Component, Module, Provide and i called onCreate() in MainActivity here's my problem DI works fine in MainActivity but other file is not working. or TestClass and TestObject get error - lateinit property testInterface has not been initialized i don't understand why error occured in TestClass, TestObject. "
346	q346	0.575537741154859 "Unresolved reference DaggerApplicationComponent"," I'm trying to create my app component, but Dagger does not generate my app component. here is MyApplication class and here is my AppComponent class here is screenshot this is my project on github here is error log "
1528	q1528	0.5734791685518367 "Dagger2 inject a presenter into a Kotlin Activity error"," I use dragger2 to inject a presenter into a Kotlin Activity, the presenter is null,here is my code: } The method getPresenter() be called in MvpActivity's onCreate() ,and the MvpActivity is a java class. Initial the presenter need some instance provide by ProductFilterModule,Maybe presenter should be initial after Component injected,i guess. when I run ,it throw KotlinNullPointerException,the presenter is Null. If i use java to do it,it no problem. "
5565	q5565	0.5689459241424089 "Provide interface implemented in Activity in Dagger 2 in Kotlin"," I have an interface like this it is implemented in MainActivity like this Now I have another class which needs the MainApiInterface.SourceView like this I have created Module and Component like this I am not sure how to provide the dependency in Modules and Provides. Any help is appreciated. Thanks "
5472	q5472	0.5678542146248114 "Module must be set dagger 2"," I am trying to create dependencies using dagger 2 with kotlin. I am getting this error on runtime Here is dependency graph. Here is RetorfitMvpApi Here is the component. What am i doing wrong here? I am using "
414	q414	0.565170283433326 "Robolectric KeyStoreKeyGenerator"," I'm using in my project Dagger2, KeyStoreKeyGenerator (from in.co.ophio.secure) and I want to use Robolectric to test my Fragment. I inject presenter to my Fragment. Presenter has userPrefs injected. UserPrefs have KeyStoreKeyGenerator implemented this is my presenter and this is my test After running test I see: Should I create shadow KeyStoreKeyGenerator? Should I wrap KeyStore class using interface? "
4008	q4008	0.565170283433326 "Inject @ActivityScoped object into a Fragment"," How can I inject a module that is into a fragment. The module I need inside the Fragment looks like this (its injected fine into the activities) To bind my to I am using an to be able to inject into my i use this one I am having the following dagger component: with a regular context binding Now I am having the which enables injection into the fragments How can I extend dagger to be able to inject the within to (which itself lives in the )? "
4883	q4883	0.5638334422613015 "Dagger2 - Dependency cannot be satisfied"," I'm having a problem with injection for the SearchPresenter object. I've revised the dependency graph more than 50 times and cannot figure out what is the problem: I've these components and modules: depends on that is provided in : and that is provided: had annotated in constructor: It depends on and that comes from Retrofit is in this module, too. BeersComponent and BeersFragment are: BaseFragment: --------- EDIT I change the to: But again, same problem: --- I simplified the SearchPresenter to avoid using @Binds and removed the dependencies: Still same problem.... but if I run it with ./gradlew build it shows different errors: In Android Studio it doesn't shows these problems. If I removed SearchPresenter dependency on Fragment it works fine. --- Found the problem. for some bizarre reason the wrongly implemented scope annotation with that @Qualifier: "
2873	q2873	0.5630555369388885 "Dagger 2 ContributesAndroidInjector provide activity to module"," I'm trying to figure out a less-boilerplate-y way to implement an that is used in all of my app activities. This is my current setup: ActivityModule: AppActivityModule(provides activities for AndroidInjectionModule) What I want AppActivityModule to be instead is: But this, quite understandbly, gives me an error My question is - is there a less boilerplate-y way to achieve what I'm trying to do? I know about and (from this answer) but this seems to only work if I have a module-per activity and bind the concrete activity type which I don't want in this case - I want to work with all activities. "
264	q264	0.5602806248988538 "Dagger2 + Kotlin, Injection not working"," Unfortunately, Dagger2 is not creating the instance of my objects to be injected. Dagger: 2.0.2 Kotlin: 1.0.1-2 Source code? Here Component: Module: "
3188	q3188	0.557440448265543 "Dagger 2 Component with differently scoped modules"," Context I have two Dagger 2 modules: , with scope, that provides an HTTP client; , with a custom scope, that uses the HTTP client to create a consumer for Github's API. Then, I create a Dagger 2 component, to provide the Retrofit client. NetworkModule.kt ApiModule.kt ApiComponent.kt Issue When I try to build the application, if I add the scope to the then I get the following error message: The same happens if I use scope instead of . How should I declare the in order to have a successful build? "
1590	q1590	0.5571354464278871 "Dagger2 + MVP on Kotlin"," I am studying Dagger2 + MVP and doing it on Kotlin. And I have a problem in understanding either Dagger2 or MVP or there combination. Construction of an application and idea how it should work are very simple. The app consists of with left-side navigation and several (let's say 3) that should be changed in the in . I have read several articles and spend already couple of days studying Dagger2. This article I use as tutorial to build my example: https://proandroiddev.com/dagger-2-part-ii-custom-scopes-component-dependencies-subcomponents-697c1fa1cfc In my idea, Dagger architecture should consist of three s : (1) AppComponent, (2) MenuActivityComponent and (3) AccountFragmentComponent. And from my understanding and the picture of an architecture in the article my architecture can be like this: (3) depends on -> (2) depends on -> (1) Each has a : (1) AppModule, (2) MenuActivityModule and (3) AccountFragmentModule respectively. For the cleaner way of MVP dependencies, as far as I understand, both (2) MenuActivityModule and (3) AccountFragmentModule should s from MVP ideology to be in and other s, such as . AppModule AppComponent MenuActivityModule MenuActivityComponent AccountsFragmentModule AccountsFragmentComponent Also I have two s: ActivityScope and FragmentScope, so as I understand that will guarantee the existence of only one Component for the time every component is need in the application. ActivityScope FragmentScope In Application class I create a graph of dependencies. In MenuActivity: MainActivityPresenter activity_menu.xml And the place where I have a breaking point in my understanding: My misunderstanding in this final part in the value. I came to the situation that I need to Subcomponent of the MenuActivityComponent and give as a constructor variable MenuActivity, but I understand this is wrong and I can't create another instance even if I want that the instance should be only one in the application. Question: Where I have a mistake? In my code, in architecture, in understanding of dependency injection or in all three? Thank you for your help! "
3731	q3731	0.5473636437512137 "How to initialize/inject generic ViewModel in BaseActivity by Koin injection on Android/Kotlin App"," I'm building the architecture of a new Android application using Kotlin and Android Architecture Components (ViewModel, LiveData) and I'm also using Koin as my dependency injection provider. The problem is that I'm not been able to initialize the ViewModel in a generic way inside my BaseActivity via koin injection. The current code looks like this: I'd like to know if is there a way to do this in Kotlin because I'm pretty sure I would be able to do in Java easily. Thanks. "
265	q265	0.5464082112641845 "Dagger 2 error: dependency “cannot be provided without an @Inject constructor”"," I'm trying to use Dagger 2 in my Android project. For starters, I want to make use of two components responsible for injecting application-wide and activity-wide dependencies respectively. As a basic reference, among other things I used this answer. So there are two different ways of setting relationship between components: with the annotation and with the parameter. If I go with the first one, my works fine. But as soon as I try to inject dependency from the , I get this build-time error: With the second approach, I get this error for all dependencies. Knowing that I do have provision methods, this error message is frankly of no use. Here is a couple of other possible sources of this error I've managed to google out but they don't seem to be the case: Scoping problems. Ambuiguity due to the same return type from different provision methods (the problem persists even if I remove methods providing ). The following code is in Kotlin but I reckon it should be pretty straightforward. Application component Activity component And below is how these components are used. Application Activity BaseFragment (where the actual injection happens) What am I missing? Thanks! "
2315	q2315	0.5451592071881038 "Android: Kotlin with Dagger activity module issue"," I want to inject activity on some class with . So I was added my project to class. When I was build my project I get an error: All other modules work correctly. Only when I was add activity module on the project then I getting above error :) "
5601	q5601	0.5451592071881038 "Dagger2 giving error when trying to use provided fragment object"," SO i am using dagger2 in one of my projects and i am facing an issue with dagger2 giving me an error that my fragment can't be provided These are my DI related classes ActivityBuilder.kt MainModule.kt visitorModule.kt VisitFragmentModule.kt this is the error "
1965	q1965	0.5361028048448251 "Dagger2 not inject"," I am a newbie to android and trying to use Dagger2. I spend whole night and still dont know why my dagger does not provide presenter. Here are my code (I use Kotlin) AppComponent PresenterModule App This is the presenter And finally, this is my SplashActivity When I run these code, I got this error Lateinit property presenter has not been initialized, which means that \"Inject\" does not work "
3112	q3112	0.5318452279322959 "Why I get @Provides-annotated error?"," I have already spent hours try to find in google what is the difference of my two dagger implementation. It was implemented like this This method provide Retrofit object, also I am using annotation and in order to put all of this objects to map. I am getting all object and passing them to all is ok and fine. But I would like to get in my presenter. So, I added this word to argument as well as to the constructor of And now I can not undersand why, but I get such error PreviewScope What am I doing wrong? "
4268	q4268	0.5306653555529472 "Kotlin Dagger ViewModel cannot be provided without an @Provides-annotated method"," I am trying to integrate Dagger 2.15 with my Kotlin project. I am getting following compile time exception even I binded ViewModel, My Code: https://github.com/rramprasad/FoodRecipes "
4136	q4136	0.5300720412101131 "Android Dagger 2 not generating component in java/kotlin project"," I really need your help as I can't proceed with my project. The issue I am having is when I try to generate dagger component it seems not available. I use java classes for Dagger component/module and Kotlin classes for the rest of application. I tried it with java only classes and it also doesnt work. Gradle : My repository component : My mainactivity component : "
2741	q2741	0.5284859062084852 "Dagger 2 + Kotlin can't inject Presenter into View"," I am trying to create simple MVP Archtecture app using Dagger 2. I am tying to achieave same result as in this tutorial, but with Kotlin. Here is my code so far. Presenter: View: Dagger Module: Dagger Component: The problem is that I am getting build error which starts with this: PS, my gradle dagger config: EDIT: Changed injected presenter type from IMainView to MainView. "
1062	q1062	0.5284859062084852 "Inject ViewModel using Dagger 2 + Kotlin + ViewModel"," So I'm trying to learn Dagger2 so I can make my apps more testable. Problem is, I've already integrated Kotlin and am working on the Android Architectural components. I understand that constructor injection is preferable but this isn't possible with . Instead, I can use in order to inject but I'm at a loss to figure out how to inject. Do I need to create a for , then inject it? Or do I use the component? gradle: Application Component BaseApplication "
3539	q3539	0.5270587079836674 "How to @Inject an abstract BaseActivity and its subclasses using dagger.android?"," I'm using the new package from Dagger 2 to inject Android dependencies in my project. I need all my Activities to be a subclass of an abstract In my I have member variables to be injected. This way: I do it because I want subclasses of can have access to injected members of : This is my ApplicationComponent: The class has simple annotated methods: I think the problem is in my This is what I have tried so far: Make the method not to depend of , didn't work. Move the from to the , so that the class is: And this is the error I'm getting: "
358	q358	0.521551862349435 "Cannot be Provided Without an @Provides-annotated Method"," There have been many other similar questions, but none of the answers have been applicable to my code. I cannot figure out what I have done wrong. First I have a that is used as a module for the : Then the is built in my class: Then I have an that is used in the (which has as a dependency): Finally, I create a new in the and the : But when I try to build I get the following error, even though I believe the function in is annotated correctly: "
5384	q5384	0.5200613453536502 "Override dependencies in Dagger Module"," There's a base module with common dependencies: I include it in every Activity module to obtain those common deps. But in some modules I want to shadow a few base interface implementations with another: And it thows -exception. Is there a way how I can replace those interface implementations without dropping the whole ? "
4426	q4426	0.5200329018722153 "Getting Error for not Initializing Instance of class in my SharedPrefManager class.Not able to solve"," } E/AndroidRuntime: FATAL EXCEPTION: main Process: com.example.shikh.kotlinmysql, PID: 6600 kotlin.UninitializedPropertyAccessException: lateinit property mInstance has not been initialized at com.example.shikh.kotlinmysql.SharedPrefManager$Companion.getMInstance(SharedPrefManager.kt:59) at com.example.shikh.kotlinmysql.SharedPrefManager$Companion.getInstance(SharedPrefManager.kt:66) at com.example.shikh.kotlinmysql.Login$userLogin$stringRequest$2.onResponse(Login.kt:34) at com.example.shikh.kotlinmysql.Login$userLogin$stringRequest$2.onResponse(Login.kt:29) "
3683	q3683	0.510962995759732 "using Dagger2 to provide a type with params got error \"cannot be provided without an @Provides-annotated method\" mean"," this is the use case where I would like to use dependency injection to inject the infiniteScrollListener, how to write the @Provide InfiniteScrollListener? Edit: maybe the question is how to proivde a type which takes function param (especially in kotlin here), and a param of Android's type of LinearLayoutManager? the LinearLayoutManager would be specific instance which is generated at the fragment's onCreateView(). trying to create a module which could provide a type of InfiniteScrollListener and with params of a function type and a other type. while build, it got error: not sure what does \"cannot be provided without an @Provides-annotated method\" mean? "
1770	q1770	0.510563750777638 "How can i inject object into presenter in android kotlin MVP mosby app with dagger"," I am trying to get dagger working in my application. After creating Module Component and MyApp i can use dagger to inject database service into view but i am having trouble doing same thing with presenter. Code: Module Component AppModule MainActivity After injecting estateService this way I can use it, but I cant figure out how do I inject service directly into the presenter. I tried doing it like this but it isn't working. Should I just pass injected objects from the activity? or maybe I should pass MyApp as an argument or make static method allowing my to get it from any place in the application? "
1390	q1390	0.508669435397486 "MVP Presenter not injected correctly"," I am learning Kotlin and Dagger 2 simultaneously by attempting to convert some of Mindorks advanced MVP sample to Kotlin but am having Dagger2 compile issues. I am swimming in classes here but am very close! Don't mind the untidiness, I intend to comb over each class once it compiles. If something is missing please let me know. The error comes down to my presenter class not being correctly injected into the activity. The error reads as follows: EDIT: Here is a repo with the failing code, built with the latest canary build of Android Studio BaseActivity.kt BasePresenter.kt MvpPresenter.kt (MvpView and MvpInteractor are basic empty interfaces) App.kt ApplicationComponent.kt ApplicationModule.kt ActivityModule.kt ActivityComponent.kt LoginActivity.kt LoginMVP.kt "
4065	q4065	0.5040237098141469 "Android Kotlin MVVM Structure without Dagger2"," Can I implement the app with MVVM but it without using Dagger2? it seems so many mvvm examples included the dagger2 library and it makes me feel confused. "
4416	q4416	0.5036565602301232 "Kodein using generics to bind dependencies"," I tried to bind the dependencies in the following way But i got the following error I wanted to import the module and get the required dependency, without needing to repeat the same binds every time. Is there a way to do this? "
610	q610	0.5030922466390932 "Getting a subcomponent instance into an activity"," : : : : How do I get a Builder instance of into ? Activities are created by Dagger, so I can't inject a provider into the constructor like the example given in the official docs. I tried to use the pre dagger-2.7 way of creating subcomponents by add the following line to : and in : which gave me: "
3576	q3576	0.5026788258927749 "Dagger2 Qualifier not working with Kotlin?"," I have a simple class as below I want to inject with different argument to it, so I use the Qualifier as per the guide shown in https://google.github.io/dagger/users-guide With that my AppModule has And in my MainActivity, I just call However, when I compile, it complains It seems to want me to provide another Provider without the qualifier. So if I add the below, all will compiles. But it is not of used to me, as I want to have different argument injection. What have I done wrong? "
3180	q3180	0.5025109725082454 "kotlin todo-mvp use of framents"," i am using the todo-mvp-sample from google samples, wonder why the developer implemented statistics activity (why using activity instead of replacing the fragment ) hers a code snippet : from TasksActivity and a repeated code in StatisticsActivty: why shouldn't we simply replace the TasksFragment with a new instance of StatisticsFragment, and if that is possible how to achieve it? eg : "
1470	q1470	0.5020077544634894 "How to inject mocks with Dagger 2.11"," I am trying to inject mocks using the Android Injector of Dagger 2.11. Before using the Android Inject I used to change the injector in the Application class so I can inject mocks. Like this: And in my tests I used to change the injectorComponent like this: And then I can inject my mocks from MockModule. But now I am using Android Injector form this tutorial: https://medium.com/@iammert/new-android-injector-with-dagger-2-part-1-8baa60152abe Well... now I inject my dependencies like this: So my approach doesn't work anymore... How can I make Dagger injector dependencies from my MockModule? Any help is appreciated! "
4524	q4524	0.484402883317638 "Koin how to inject outside of Android activity / appcompatactivity"," Koin is a new, lightweight library for DI and can be used in Android as well as in standalone kotlin apps. Usually you inject dependencies like this: with the method. But what about injecting stuff in places where Activity context is not available i.e. outside of an Activity? "
5526	q5526	0.4831510399936727 "Dagger2 + Kotlin: lateinit property has not been initialized"," I'm trying to inject the ViewModelFactory into my Activity, but it keeps throwing this same error: lateinit property viewModelFactory has not been initialized. I can't find what I may be doing wrong. See the code above from my classes AppComponent.kt MainModule.kt MainActivity.kt TweetSentimentsApplication.kt "
15	q15	0.47992923210311794 "Using Kotlin with Dagger"," What's the best way to use Dagger to inject dependencies into classes, especially zero-arg constructor classes like Activities, with Dagger? Will Dagger 2 possibly bring improvements to the situation? Thanks in advance. "
2311	q2311	0.47780743395115566 "Dagger 2 - Inject with default value in constructor"," How I can inject this constructor: I am only providing Dependency and ... But it says that it cannot provide . It should need this class, since it has a default value... How can I make this work? "
1873	q1873	0.4728805999646234 "Component (unscoped) may not reference scoped bindings"," I've recently started using dagger-2 with kotlin. Unfortunately I have ecnountered a problem with sumbcomponants and I have trouble understanding why I get this gradle error: Module:app NetModule: @Module class NetModule(private val BASE_URL: String) { NetComponent: Does anyone know what could be the issue ? "
2681	q2681	0.471181317045705 "@Provides methods in SubComponent with AndoridInjector and Kotlin"," I'm using the Dagger2 AndroidInjector and Kotlin. I have a subcomponent with its module defined in this way: If this was java I could add a static @Provides method to the ComponentModule @Module. It has to be static because Dagger complains if I add a non-static method to an @Module class that uses @Binds: The problem is: how can I do this with Kotlin? "
3311	q3311	0.471181317045705 "Can't Provide Qualified String with Dagger2"," I'm trying to follow the sample here I have already used Dagger2 with the AndroidInjector successfully but now I was experimenting the new and . I get the error: I don't think that the new Dagger classes are causing the issue. If I remove the in BuildModule.kt the code compiles. Any suggestion? Here the code: The AppComponent.kt The AppModule.kt The BuildModule.kt The DeviceModel.kt The MainActivitySubComponent.kt The *MainActivity.kt** The App.kt "
3409	q3409	0.46925484694072467 "How to inject Context into a Presenter using Dagger 2"," I've been checking recently Dagger 2.14.1 with the new Android injectors. I'm using MVP and the Presenter is getting inject into the View correctly: -- -- -- -- Now, instead of having the logged message harcoded, I would like to get it from string.xml, so I tried this: But then I get this error: Could anyone tell me please how to inject the app context (or the resources) into the presenter? Thanks. "
3695	q3695	0.466789145445656 "how to provide different handling function to the injected InfiniteScrollListener instance - in kotlin"," This is related to using Dagger2 to provide a type with params got error "cannot be provided without an @Provides-annotated method" mean Seems I find a work around (thanks @David Medenjak for explain the error), it works, but not sure if there is better way to do it, especially to provide the flexibility of proving different handling function to the injected InfiniteScrollListener instance. Current solution the handling function is hard coded in the PresentorModule. For that I don't think it is a really solution for the error of Here is the current solution: The subcomponent with ViewScope, now it provides LinearLayoutManager and InfiniteScrollListenerwhich are singlets to this scope The PresentorModule provides linearLayoutManager (has dependency on the current context of this module), and InfiniteScrollListener which depends on the presentor and the linearLayoutManager, with a The definition of InfiniteScrollListener class, which takes a handling function and it is called in onScrolled() The use of presentorComponent: I really would like to have the flexibility of provide different handling function when inject the class InfiniteScrollListener, Like the old code was doing: Instead of hardcoded in the "
2708	q2708	0.46611276999445383 "Can't inject same instance into a Service and a ViewModel"," I am trying to replicate this this Singleton using Dagger 2. I would like to have a BehaviorSubject in which I call to in a service and to in a ViewModel. Here is my Singleton object: In my Service I can do this: and then in my ViewModel I can do this: When I run with this I get the same observable in both the Service and the ViewModel. and so I can call onNext in the Service and observe the change in the ViewModel. As I said above I am trying to replicate this using Dagger, but I cant seem to get the same instance in both the Service and the ViewModel. I think the problem is that I just have two different graphs, but I cant figure out how to join them - even after reading the docs and knowing about Subcomponents. Besides that, this seems like a huge amount of code to do something so simple. So my question is how do I do the equivalent using Dagger with the minimum amount of code? Here is what I have tried so far: Here is the class I would like to inject into the Service and ViewModel. Note: I originally thought just annotating the class and constructor would work, but have also tried with a module (hence the comments) Here is the module for providing the Service injections Here is the module that provides the MessageBus (Note I also tried just using commented out annoations above. Next is the App component finally the component for the ViewModel. In the service I have: In the ViewModel I have: When I run this, everything is injected, but I end up with two instances of MessageBus rather than one. As I said above I think the issue is that and the are actually two different graphs. Is this the case? If so how do I join them. If not can someone explain what's going on and how to get this to work. "
4106	q4106	0.46252689773789774 "Android library .aar with dagger + application part depends on aar"," I have a question about dagger 2 and the possibilities to extends some components or modules. In my case: I have a library (.aar file), it's part of the application. Inside that file is defined AARComponent that has some modules e.g. AARActivityBuilder. And that AARComponent is initialized in Application class. But the second part depends on that library and I'd like to add some modules (usually activities) that are defined only here. But I want to use dependencies from the library as well. Example: AAR file has an abstract class A. Application that imports aar library has class B that inhertis from class A. So I need method with annotation @ContributesAndroidInjector which returns class B but .aar file does not know about class B. I was trying to extend AARComponent but in vain. Also I was trying to create new @Component interface and add AARComponent as dependencies. But also did not work. Maybe I missed something or did wrong. Is there any good method to do this? Thanks "
3793	q3793	0.4615410219700358 "Issue with injecting dependencies in Fragment (MVP, Dagger2, Kotlin)"," I`m new in Android. I try to build project on Fragments via Dagger2 and Kotlin with MVP pattern. I caught an error while building project. Here are my code: AppComponent MainActivityModule MainActivityComponent UsersFragmentModule UsersFragmentComponent Application.class MainActivity.class UsersFragment.class Please, could someone help me with this issue? Thanks in advance! "
2434	q2434	0.45190584742313333 "Android Dagger: I can't provide an external class without @Inject constructor"," EDIT Solved the issue. See my post below. I'm writing an Android app with use of Dagger and Kotlin. I want to inject class into my class I have a module, which . and a Dagger component: Lastly my : Now, I'm trying to into my : Unfortunately I'm getting compile-time error I don't understand why I'm getting this error, since I'm the . Obviously I cannot add constructor, since I don't own the class. Any help what I'm missing? "
3567	q3567	0.4493691450342664 "Access shared preference value in data module in clean architecture Android"," I want to read shared preference value from presentation module into data module, as my presentation module is dependent on \"data\" and \"domain\" module. it became a circular dependency to access shared preference in data module. Please guide me, as I am following clean architecture. "
5510	q5510	0.4493691450342664 "Type mismatch when getting the variable value from Repository in ViewModel"," I'm using the LiveData and ViewModel from architecture components on Android. This is my repository class - This is my ViewModel where I want to get the value of imagePath from the repository after the value in the Repository has been updated - The problem is that imagePath in the DataRepository is of type String and the imagePath in the DataViewModel is of type MutableLiveData. How would I assign the imagePath value from repository to the one in ViewModel ? Do I need to do any type casting ? "
2743	q2743	0.44778390243332217 "Kotlin - Dagger 2 is is not injecting objects"," I have created simple application to test Dagger 2 injection. I think I have written everything propertly but in runtime I get this error. It turns out that none of my dependencies are injected. Here is my example: Component: IMainomponent: AppModule: Main presenter module: Use in activity: Could you tell me if I am doing something wrong. Gradle dagger settigns: EDIT: I have notieced that when I configure Dagger graph using for example this, I get info that mainPresenterModule method is deprecated. I found info that android studio usually shows that info when it cant find any @Inject of components provided by builded module. "
3763	q3763	0.44339828598078707 "How to override dependency into real kodein app dependency graph?"," I'm trying to make some tests and i need to replace the real dependency by a fake one by overriding it on KODEIN but it's not working and i don't know what i can do anymore. Here is my dependency graph (I'm omitting others dependencies): Here is my application class: Here is what i'm doing to override the dependency: I'm still seeing \"RetrieveContacts REAL\" instead of \"RetrieveContacts FAKE\" in console log "
3558	q3558	0.4430204392724213 "How can I make a Dagger2 injection nullable?"," Here I inject a SimpleDynamicString object to my presenter in a MVP structure. To avoid a NullPointerException, I have to implement this. Since I would like to use this one as a library, I am forced to implement everywhere. Can I avoid this, so if (accidenataly or not) forgotten, no NullPointerException will happen? "
3415	q3415	0.4430204392724213 "Kotlin Dagger not inject"," I recently move from java to kotlin, and try to implement dagger 2 for dependency injection. I've add this to my gradle Here is my module Here is my component Here is my Application Here is my activity and i get this error This code is working in Java, any idea how to solve this? "
3713	q3713	0.4430204392724213 "IllegalArgumentException injection dependencies into Android Service"," I'm trying to inject dependencies into a subclass of , but I'm getting a compile time exception that is very vague. EDIT: When I comment out the inject method declaration, it compiles. AppComponent: Module: Component: Service: Stack trace: "
2911	q2911	0.4419563458877191 "Dagger Classes showing up as red but still builds"," I am new to Dagger2 and I am trying to use it in my Kotlin project (1.1.51). I followed a few tutorials and all is good. I have these in my gradle file and I am using Android Studio 3.01, I have to use gradle-3.3 I can successfully run my project and Dagger2 seems to be working. The only annoying issue is that the Dagger created classes always come up as red on the import list. e.g DaggerMainComponent. import com.burfdevelopment.hack24.Dagger.MainComponent import com.burfdevelopment.hack24.Dagger.MainModule import com.burfdevelopment.hack24.Dagger.DaggerMainComponent So if do a code tidy which removes unused imports it always removes it even though its being used. If I click on the DaggerMainComponent, it does go to the generated class. "
3209	q3209	0.4415077582073438 "Kotlin + Dagger2: cannot be provided without an @Inject constructor or from an @Provides- or @Produces-annotated method"," I'm getting the following error: I'm stuck trying to make a module that provides two qualified Strings. Here is the simplified setup of dagger. The injection is done in MainActivity as: I also tried declaring the getters directly in the component, but it failed with the same error. Same when declaring the module methods as static. Just as should be, the code works fine with only one , then the string is injected in both fields. I assume the problem is with the qualifier. Any help is highly appreciated. Using: Android Studio 3.0.1 Kotlin 1.2.10 Dagger 2.14.1 "
2179	q2179	0.43994220167055526 "Call Fragments presenter's method from Activity [Dagger 2 + MVP]"," I have 2 different fragments and they both will be using by 2 different activities. In both activity's layout there is one frame layout to use as fragment container. Which are; Fragments: MapFragment, ListFragment Activities: HomeActivity, SearchActivity. Lets talk about HomeActivity; HomeActivity will inject ListFragment and MapFragment on onCreate of activity and push injected fragments to it's layout(list fragment first) and after that, activity will call injected fragment's presenter method to show service result on list or map. Codes; Fragment Side; _ ListFrgPresenter: ChallengeListFragment: Activity Side: HomeActivityComponent: HomeActivityModule; HomeActivity: Update: Problem is; I need to inject challengeListFragment in HomeActivity on initComponent method, also I need to give challengeListFragment object to ChallengeListFrgModule as parameter in same place. I think problem occurred in here. Before finish injecting ChallengeListFragment object ChallengeListFrgModule constructer triggered. How can I fix it "
1034	q1034	0.4398516615831647 "Binding Into Map With KClass Type"," I am trying to bind subclasses of into a map by their types: But I am getting Dagger compiler error: The above is included in my , which is a module in my . So Dagger should be able to provide the required by my , but I cannot figure out why it is crashing. I also tried switching the annotation class over to Java, taking a as a constructor parameter instead of a . Then modified my to depend on a , but the same error occurred. "
1468	q1468	0.438048105813363 "Android ViewModelProviderFactory in kotlin"," I'm experimenting with the Architecture Components from Google. Specifically I want to implement a ViewModelProvider.Factory to create a ViewModel that takes constructor parameters, like so: My ViewModel looks like this: Anyone knows how to avoid the nasty cast in the end : "
5592	q5592	0.4358308679886745 "Providing FragmentStatePagerAdapter instance via Dagger2 in kotlin"," i am making an app using Dagger2 on kotlin and i want to provide my fragment with a custom FragmentStatePagerAdapter class using Dependency Injection: These are the various code snippets: VisitorModule.kt VisitorContainerFragmentModule.kt and i am injecting the adapter in my fragment like this: VisitorContainerFragment.kt but when i run the app i am getting this error: "
2373	q2373	0.424949512349364 "kotlin 'onCreate' overrides nothing"," I am using component development, in my common module BaseActivity.kt and BaseFragment.kt. The following problems occur when other modules inherit them BaseActivity.kt: MainActivity.kt "
2868	q2868	0.42386561219394925 "Dagger with Mvp on Kotlin - Android"," I am an Android developer that is just getting into Kotlin, and I have been trying to setup an Mvp Dagger application in Kotlin, but I cannot figure out what is going on. I continue to get this error: Here is my code: KotlinApplication: AppComponent: AppModule: InjectionModule: MainActivity: MainMvp: MainPresenter: MainBindModule: MainModule: And finally, ActivityScope: Does anyone know what might be wrong? I have used the same exact Architectural pattern in java several times before, and I have never ran into this error before. Also, when I comment out everything inside of InjectionModule, everything works "
5362	q5362	0.4194603969913705 "Dagger: How to provide specific implementation of a parametrized base type?"," I'm new to Dagger and have the following setup: When I build the project, this error comes up: And when I try to provide the entity-specific instances, like this: I get the following: Also I have tried separating the provider methods of fruits & users into their respective modules but latter error also comes up, maybe I'm not hooking up the FruitModule, UserModule and AppModule correctly. I'm having similar problems providing implementations of interfaces. What would be a correct approach here, or is it not at all possible to inject parametrized classes with Dagger? UPDATE I have managed to solve the dependency issue on RepoImpl by explicitly providing each object to be injected (the latter option where we provide and ). I think the @Inject annotation on the constructor was somehow not being registered, so had to refresh the project. However, I cannot figure out how to provide implementations (or sub-types) of parametrized interfaces just yet. Consider for example the ApiService parameter of RepoImpl defined as follows: error: whereas error: How else can I inject these implementations of the interface? "
4452	q4452	0.4164783305830728 "Wrong type of parameter passed"," I have a base module and in this module I have an interface: I have a market module and in this module I have an activity with this static method: In my other module (this is the app module) I would like to start the market module like this: And navigationInterface is a class variable in my activity: My problem is that when my program calls the startActivity() method and it calls the MarketActivity.newIntent() method the type of the navigationInterface parameter is the MainActivity. Why? I got this exception: The same code in pure kotlin project is working fine, but now I have a mixed project. (app module is java, and the oders are kotlin modules) "
2394	q2394	0.4164230982246023 "Problems with HasSupportFragmentInjector in kotlin - DispatchingAndroidInjector is null"," I'm trying to implement mvp pattern with dagger 2 support in my app Here's the objects: The problem is, when login fragment calls AndroidSupportInjection.inject(this), The AuthenticationActivity supportFragmentInjector get called, but the androidInjector is still null As a result, I'm getting the exception: java.lang.RuntimeException: Unable to start activity .....AuthenticationActivity}: kotlin.UninitializedPropertyAccessException: lateinit property androidInjector has not been initialized I'm not sure how to fix this Thanks in advance "
637	q637	0.4163220277287033 "Dagger2 @Nullable annotation with Kotlin"," From dagger Module: The place I inject to I get following compilation error I've tried to convert dagger module to Kotlin, it that case Dagger see Jetbrains @Nullable annotation, but don't see annotation in constructor class for some reason. I use Dagger 2.9 "
891	q891	0.4160775833047423 "Unable to set ViewModel on Kotlin"," New to Kotlin language, trying Android Architecture Components. Trying to set a for my in Kotlin language: Getting Name expected: and expecting ) What am I missing? "
2712	q2712	0.4153322610986842 "What's wrong with using setter injection for an Android ViewModel vs Implementing and injecting a ViewModel.Factory?"," I have been struggling with getting a Dagger singleton injected into an android component (Service) and a ViewModel. See this question as a reference. I have not found a good example of how to simply inject a field in a Service and a field in a ViewModel with the same object. If there is a simple solution to that I would love to see it. I found some questions, here and here, that have answers that go down a path of implementing ViewModel.Factory and then injecting dependencies into the constructor of a ViewModel subclass that has dependencies via the create method. My question is. Are there any serious issues with just injecting the object in to the Activity (and the Service) and then using a setter to inject the object into the ViewModel after it has been retrieved? For example. In the view class I could check to see if the value has been already be set, and only set it if it's null. "
4526	q4526	0.41463481593265267 "Dependency Injection in Adpater in kotlin Dagger2"," Expected Result What am I'm trying to do is to inject my class to and on click of child view what to check user Type? How to implement dagger in Adapter? Dagger working fine with Fragment and Activity. only getting null in adapter because unable to initialize adapter to dagger Sample for interface in dagger Adapter of group and childview I'm facing the error in this line On The onclick checking AccountType and implement business logic "
5543	q5543	0.41212814334609765 "Dagger2 generate multiple instances"," I'm using Dagge2 in my kotlin project with pom file. I worked with Dagger in my android projects and it worked fine. But somehow I don't understand why Dagger generating multiple instances of my every object in kotlin. Below is my Component And this is my Module That's how I'm building my AppComponent I debug my code and see, every time I inject MeterCollection class it gives me new object. "
1868	q1868	0.410194549601197 "How to provide test data and classes in multi-module gradle projects"," I want to provide downstream modules with test data/classes from an upstream module. What's the best way to do this? Let's say I have the following modules: - Has an interface . This module by default will provide a which backs this cache with SQLite. - requires an instance of to display the transactions to the user. This module is dependant on . What I want While testing , I want to provide a fake implementation of , like . Other downstream modules of may need too. This class should NOT be included in non-test modules. These test dependencies like should be able to leverage kotlin the visibility modifier - i.e. be in the same module as I'm guessing that the solution here is something to do with and a special configuration? note: this is for android, so I'd need to generate an APK. is this possible without flavors? "
5309	q5309	0.4101049252540439 "dagger @IntoSet not work in kotlin object?"," I used example in https://google.github.io/dagger/multibindings Module A Module B component test It show error with MyModuleA must be set, but changing module from object to class is work fine. @IntoSet annotation is not work in kotlin object? "
5558	q5558	0.39796579912491076 "kotlin.UninitializedPropertyAccessException: lateinit property pref has not been initialized"," i know this question has been answered [Here] (lateinit property has not been initialized that was due to butter knife library problem But my case is different. completely different. In my case when i use dagger injected properties in my base activity it shows me error Caused by: kotlin.UninitializedPropertyAccessException: lateinit property pref has not been initialized But same property when i use in my sub activity(Login activity) it works fine. eg. pref.setLanguage(\"abc\") -> it works fine in login activity but throws error in base activity Sharing my code. Please help BaseActivity LoginActivity AppModule Builder Module AppComponent } "
1199	q1199	0.3973290320337525 "Dagger2 cannot access nullable. javax.annotation.Nullable not found"," I have a module to provide a Retrofit interface. The is used with Which is injected in the application and stored in the applications companion object. In the Activity I then have This gives a build error If I attempt to inject the instance instead, I get a different error The stacktrace shows class file for javax.annotation.Nullable not found. I haven't been able to find anything referencing this error. There is a StackOverflow post from 12 hours ago which seems to have the same error, but it has been removed. https://stackoverflow.com/questions/44983292/cannot-access-nullable-on-injecting-with-dagger2-in-kotlin "
3953	q3953	0.39441549970368106 "Can't see ViewModel classes in Android"," I want to start using MVVM in a Kotlin project. In the of the app module I have: In the of the project I have: Then I have: but ViewModel is not recognized as a symbol I have also tried: implementation \"android.arch.lifecycle:viewmodel:1.1.0\" and it did not work either. What's missing? "
577	q577	0.3900926760829399 "How to inject into a Kotlin delegated property with Dagger 2?"," I need to do () injection with dagger2 into a kotlin delegated property. So I tried "
1440	q1440	0.38939186358409006 "Dagger 2 doesn't recognize provide method in Kotlin. Java works fine"," Dagger doesn't recognize one provided method in Kotlin. This is the important part of the module: The error message is as follows: If I use MutableList, then it works. Therefore the question is: what is the problem with List in Dagger2 / Kotlin? "
3847	q3847	0.38939186358409006 "kotlin + dagger 2 : Execution failed for task ':app:kaptDebugKotlin'"," So, I am trying to create an example, inspiring from GithubBrowserSample with Kotlin. I have successfully migrated to kotlin code but I getting error with my . I can see that issue is surfaced from AndroidInjectionModule from Let me share my code snippets. KotlinApplication.kt AppInjector.kt ApplicationComponent.kt SplashActivityModule.kt BaseActivity.kt My extends . "
4887	q4887	0.3882428110388801 "\"dagger-android\" library, how to provide Context(Application)?"," It is confusing that all web search results seem to use slightly different versions of Dagger or different approaches. I followed the example which claims that is the better \"new way\". (https://proandroiddev.com/exploring-the-new-dagger-android-module-9eb6075f1a46) The full sample source code is here (https://github.com/jshvarts/DaggerAndroidKotlinSampleApp). Now, I want to know how a non-activity/fragment class could be provided with a Context. So, I added a simple class like this, But even though the sample project had AppModule and AppComponent, the compilation failed, because app could not be provided. I have searched the web and found this method (https://github.com/google/dagger/issues/832). I followed that code and modified the sample's AppModule and AppComponent like this, But the, I get the following compilation error. Again, as I have said in the beginning, the Dagger examples on the Internet are all slightly different, I do not know how to take two features from two examples. "
2060	q2060	0.38734543361362167 "Crash dagger when build project"," When i try to build a project for generating Dagger's files build fails with an exception. Could you please tell me how to fix it or at least in what direction look. Components: 1) AppComponent 2) QuestionsComponent Modules: 1) AppModule 2) QuestionsModule App: If it helps then I attach a link to the githab "
5336	q5336	0.38734543361362167 "Android Architechture Navigation - onSupportNavigateUp()"," While using Navigation Library, is it okay to finish the inner activity with in ? Or we should use to remove that from Stack? And, I have trouble using NavController. My Navigation graph looks like below: I have tried to use like below: (i) Using NavController inside DetailActivity But getting exception as, (ii) Using NavController inside BaseActivity That also not working. Am I doing it wrong?? "
1956	q1956	0.38643351488256134 "Kotlin Unit Test Not Finding Module Dependency Interface"," I have an module and a module. In my module I have an interface called . In my module I use to inject an implementation for this into my class and this works fine. When I then go to test it using a kotlin unit test, at runtime I get a . I have also tried to include the module in my modules dependencies like so but that also did not work: Here are my current test dependencies and also how I'm including the module In my unit test I'm using it like this which could be the issue: "
1657	q1657	0.3844840099802628 "Kotlin+Dagger2 @Named annotation in Module provider method usage"," I’m having a problem using Dagger 2 @Named annotation in Kotlin that is preventing me from migrating Dagger graph to Kotlin. The problem occurs when I need to inject in a Dagger module method a @Named parameter. In this case I’m not injecting it through a constructor or a field. I’ve tried all Kotlin annotation use-sites targets and none of them seems to work in a method parameter. Please, any solution will be very much appreciated. Below is the portion of java code that once converted to Kotlin won't compile: "
2421	q2421	0.3844336580131145 "Dagger2 - Duplicate instance in DoubleCheck"," I'm using Dagger v2.12 with with the following config: AppComponent AndroidBindingModule MainModule MainActivity Analysing the memory dump, I noticed that the class has been created twice, one been referenced in and (as expected) 1, but, there are a second instance referenced only in 2. Why this is happening? Is this a bug, expected behaviour or some issue in my Dagger config? Edit: Sample repository with the issue https://github.com/ismaeldivita/dagger-test-so "
5500	q5500	0.3844336580131145 "Activity layout does not respect softkeys"," I'm presenting an Activity on Android like this: When I take a look to the emulator it works fine as it is on top of softkeys, respecting the area. However, when I run the project on a physical phone, It does not respect softkeys and my activity is placed behind softkeys buttons. How can I make my activity respect the softkeys area, whatever its height is? "
4279	q4279	0.3843207230513769 "kotlin dagger retrofit field injection"," When trying to inject field variables using dagger I'm getting null. Here are the files. Some are in Java and some in Kotlin App.java AppComponent.kt NetworkModule.kt // Repository where injection should be done "
5197	q5197	0.38174225518705435 "Generate API documentation from Retrofit client using Swagger"," Is there any way to autogenerate API documentation when Retrofit client is being used in Spring Boot Application. Dependencies: In my experiments it is working fine with native spring @RestController But it's not generating API documentation for retrofit clients like- "
2313	q2313	0.37792561998798785 "How to inject transient dependency factory with Kodein?"," I wanna use ViewModelProvider Factory to inject custom parcelable data from intent (ie: Club). In my activity, I wanna get a viewModel with the data from the intent built in. Here my activity : Any idea? "
3604	q3604	0.3767529868625993 "Android Architecture components: ViewModel returns null on configuration change"," I`m developing a gallery app in kotlin using pixabay api, implementing Android Architecture components and retrofit to interact with the server. the app works fine but when i change the configuration the view model returns null! what is the problem ? Retrofit setup the view model class the Repository class "
2945	q2945	0.3760947800456673 "Dagger 2 can't inject from subcomponent (kotlin)"," I know that generally it shouldn't make a difference that this is using Kotlin, but I've run into odd cases where the qualifier needed a scope in Kotlin so bare with me. I have a class that allows me to create a simple mapping of view type -> view holder class: The ViewHolderSubcomponent is defined below, the goal is to be able to create one subcomponent for each view holder and inject a few things: The ViewHolderModule is defined as: When I run the app I find that the injection didn't work, my values are null. Looking at the generated code I can see why: There's no created for this subcomponent. I can't figure out how to get this to work. I know that I should be able to inject into objects not created by dagger, I just can't quite figure out what I'm missing here. Oh, if it helps any, I did make sure to include the in my 's list of "
4708	q4708	0.3729559462222469 "How to used Application Context in Dagger in object class kotlin"," How to used Application Context in Dagger2 in class like I want to toast when socket listens to any data. so need to provide a context how to get dagger application context in an object class. Is this possible or there is another way to achieve?? "
645	q645	0.3729559462222469 "Dagger 2 multibindings with Kotlin"," I have the following snippet in my dagger 2 module I try to inject into in this way But dagger shows an error which says that Dagger cannot provides java.util.Set without @Provides or @Produces method. I did the same in java and it worked. Does somebody know why is it failing? "
2267	q2267	0.3702523838600476 "Context cannot be provided without an @Provides- or @Produces-annotated method in kotlin"," I am using Dagger for dependency injection in Kotlin. Now here are the necessary classes ActivityModule ActivityComponent MainActivity Now I am getting the following error I am using the same code in java and its working fine but here in kotlin its giving the error, also dependencies are working fine. Meanwhile i am using the following versions of gradle and kotlin Kindly help me to figure out what am I doing wrong "
818	q818	0.36996062264041335 "Inject Generic types in Kotlin with Dagger 2"," In module In activity In the end i get an error "
528	q528	0.36964106754566495 "MVP + RxJava - Put the Schedulers in the Presenter or in the Interactor?"," I am developing an Android application with MVP and RxJava. Well, I have a doubt: When I am creating my presenter and interactor I can put me Schedulers in the presenter, like this: Schedulers in the Presenter Presenter: Login Interactor: Or I can set the Schedulers in the Interactor, like this: Schedulers in the Interactor Presenter: Login Interactor: I see that Google advices to set Schedulers in the Interactor. You can see this in this link: https://github.com/googlesamples/android-architecture/tree/todo-mvp-rxjava/ But many people put the code in the Presenter, like this example: https://github.com/BoydHogerheijde/Android-MVP-example/blob/master/app/src/main/java/nl/bhogerheijde/example/rxmvp/interactor/Interactor.java So, Do I set Schedulers in the Presenter or in the Interactor? (I think it's a better idea to put in the Presenter as the Intractor job is only to get the Data, but maybe I am wrong...) "
2802	q2802	0.36898291008457407 "Dagger's module doesn't work after conversion from Java to Kotlin"," I create simple application for Android with Dagger 2. It has one shared object and one module. The module is: This module works. But when I convert it to Kotlin, I get compile time error: This module after conversion: What's wrong? Why I get this error? How to solve? "
3689	q3689	0.36754561865317353 "How to test sharedpreference that inject in repository in Android MVP Clean Architecture"," i've facing a problem to test sharedpreference in datastore. in actual datastore i implement three arguments, those include sharedpreference. in this case i want to store value, and get that value. mocking not help here. mocking cannot propagate actual value, that will be used by code. in second part. and this datastore looks like } Actually i want to get value in from this field . Anyone has approach to do some test for that?, any advise very welcome. thanks! "
2467	q2467	0.36754561865317353 "Error while trying to inject ViewModelProvider into Activity with Dagger2 and Kotlin"," I'm receiving following error while trying to inject into : I've created pretty standard Dagger2 implementation, which looks like this: My is defined as following: Here is class: And finally class: I've been following Android Architecture Components Sample from Google repository and I think everything seems to be similar to that implementation, so I don't get why this is not working. When I'm trying to inject to then it's working, so the problem is definitely with , but unfortunately I don't know where the problem is. "
2981	q2981	0.3674373506234871 "Dagger 2 injecting view model of activity into fragment"," (using kotlin) I have an app that uses a settings activity with 2 fragments. I'd like both to get the same instance of the SettingsViewModel as the activity. I assume there's a scoping issue that I'm missing. First, I have the standard : I bind my activities in: With all other things in place this works well and does get an instance of the . adds the following: Both fragments appear to have the injectors called on them (I've checked through the debugger and is called). The fragments include: But in my fragment's I'm seeing that is still null. Is there anything special I need to do here to avoid calling and instead injecting the view model? UPDATE: After a bit more reading I found that the correct way of using the view model injection in fragments is to inject the factory and get the view model in : This makes sense since I have bound as the and it's annotated with . When I try to compile the above I get the following error: It appears that Dagger can't find the mapping created by the . I'm still at a loss at how that can be. Maybe my tree is incorrect? Why would activities in be able to get the ViewModel but not fragments? UPDATE I've done a little more digging into this... From the full error: I think the issue is that somehow Dagger is trying to inject my fragment with instead of . Still not sure how to fix. "
1523	q1523	0.36275923782991853 "Inject doesn't work with second constructor"," for my current project I'm using Kotlin and Dagger 2. I want to inject dependencies in an secondary constructor, but the constructor never gets initialized. As a workaround I'm currently injecting in the primary constructor but this isn't optimal. Am I missing something? "
5654	q5654	0.3570935591051868 "Dagger 2, Providing Application Context in Module"," Im pretty new in Android development and newer in DI. I am using Kotlin on a personal project where I am experimenting with Dagger 2. I managed to set it up for a util class, but where i need to have a context to use it to inject a class that requires a context (a sharedpref manager class), I failed. Here is my code, and here is the error ( NPE ) i am getting. Thank you in advance. my module class my component class: edit: added the info below, How I call the inject of sharedPreferencesManager: Also in my HomePresenter class, in onAttached method override: My pineApplication class and SharedPrefManager class looks like this: SharedPref: Crash, can not get the pineApplication.getContext() (edited, added the full stack trace) "
864	q864	0.3570489146756043 "Some error(s) occurred while processing annotations"," When I add the code int activity The error comes this is my module build.gradle This is my component This is my module And this is my activity If I delete the inject code the program run correctly, I try add @JvmWildcard at CommomService @provides return type, but it still doesn't work "
5588	q5588	0.3549513440292782 "One Android project can have two app modules"," I have two app modules(not library) one is in Java(app1) and another is in Kotlin(app2).both the modules having the custom application classes and using the dagger for dependency injection ,In android studio project i want to add app2 as dependency for app1, is it possible? it is really appreciated if some can provide the some idea. Thanks in Advance. "
208	q208	0.3549513440292782 "Dagger 2 Named cannot be provided without a @Provides method"," Trying to grok Dagger 2 and having an issue with named providers. I have a simple setup as follows: When rebuilding my project I am given: I don't understand why adding the Named qualifier doesn't work for me here. If I remove these I can get an instance of SharedPreferences without issue. Any insight into what I'm doing wrong would be appreciated! EDIT: Changes per suggestions with the same results as above. Project Repo @ Github "
453	q453	0.3549513440292782 "Dagger 2: Multiple entries with same key"," Short explanation Simplified UML diagram that describes by architecture. And there is an exception: cannot decide from which provide an instance. I never ever work with multiple inheritance. What can you recommend to solve my situation? I can dispose of and move to . It will work in my case, but it's sounds like a dirty solution. There is some code. AppComponent: AppPresentationComponent GameSessionComponent GameSessionPresentationComponent "
566	q566	0.3487631626051311 "Dagger don't generate component for androidTest"," I'm facing a problema with the component dagger generation, I want to generate the component for androidTest, but when I build the project, the DaggerTestComponent it's not generated. Component: build.gradle: I put the full project on github: https://github.com/felipesaruhashi/TestingKotlinDagger "
2371	q2371	0.3487631626051311 "Is it a good practice to use @Inject for Android's Fragment on Dagger2?"," I am using of Dagger 2.11. It works without problems with the following sources. is also working. But when I read the document, I felt it was correct to use as well as activity. And also in the answer here, it is written as Is my implementation problematic? What problems will occur with my implementation? "
4813	q4813	0.34832257922353876 "Dagger2 ViewModel Injection"," I have working setup for dagger2 injection with viewmodels, however I am trying to refactor it a little bit and that results in a following error: I don't understand how dagger works internally so I am not sure if what I want to achieve is even possible Here's my setup: But I want to refactor it to be like this and I think it has something to with the fact that I want to bind ViewModelProvider.Factory in one place and do actual mapping of view models in different place, the GitHubBrowserSample application has this file: https://github.com/googlesamples/android-architecture-components/blob/master/GithubBrowserSample/app/src/main/java/com/android/example/github/di/ViewModelModule.java Where everything related to ViewModels is in single file. So the question is: Is what I am doing even possible? If so what I am doing wrong? If not, then why? "
1784	q1784	0.3471624826454054 "Unable to run kotlin with dagger 2"," I'm new to kotlin and dagger 2. I try to following this guide in Android Java. but error was throw... What did I do wrong? Application NetComponent NetModule AppModule AppComponent Finally, HomeActivity Gradle App Gradle Project EDIT GRADLE LOG "
2631	q2631	0.34586269519554363 "Custom semi-generalized Factory for ViewModels"," I'm trying to create a generalized ViewModelProvider.Factory to instantiate my ViewModels These are my bundles: And these are the base ViewModels that I extend with custom ViewModels: And an example of a ViewModel that extends from one of these: My problem is that will not find any constructor and this lines comes up as this in the logs This is what I get in the stacktrace: Is this a Kotlin problem that there are no constructors? How do I fix this? "
3055	q3055	0.3451187315410179 "Kotlin + Dagger inject issue depending on device's Android Version / SDK (?)"," Last week, while implementing Dagger in my current Kotlin MVP project, I was testing it on oldy phone with KitKat 4.4.2 (yep, it still supports all major material features and stuff :)) due to primary phone's maintenance. So that week I was having typical issues rather than something unusual and fixed them more or less quickly by investigating provided errors. At long last, code compiled, current project version was built without issues and ran without major bugs on KitKat with UI interacting. But when I took main phone with Nougat 7.1.2 from repair center and launched app on it I stuck with weird DI-related issue. Right after that I also launched app on mate's Marshmallow 6.0 and caught one more, exactly the same. The issue is briefly described this way: App (successfully) launches; I'm able to operate ViewPager/DrawerLayout/etc ui features which are provided through context and fragmentManager injection; All services are also available and running through injection as expected; App crashes when i'm twitching Activity's Presenter. And now the funniest part, which drives me crazy: All accessible classes, which don't bring any problems, are injected through constructor injection. But the Presenter instance, which is injected using field injection, is not initialized when needed. Surely, I tried not to use lateinit modifier and to inject it like nullable field with @JvmField or without it: result is the same - it's not injected at all. As the issue is related to , i have the \"natural constraint\" not to use primary constructor for injection. Here is the exception, which is not very informative to me, except the first string: Here is some code: App: AppComponent: AppModule: BaseActivityModule: At the moment i have kinda wide-branching MVP model, so each activity/fragment has 1 View Module and 1 Presenter Module, and all common injections interact through the base classes. Here is the sample of Activity DI parts: BaseActivity: Example of using constructor injection - MainPresenter (all injections work - no problems here): And below is the place where all \"magic\" begins - is not initializing on any circumstances. BUT, as said, that's NOT happening on KitKat - app is running on it without any problems. So, once more: I presume that problem exists when app is running on Marshmallow+ (unfortunately, don't know about Lollipop yet). I really wonder if someone more experinced had issue like this before. No build errors, no dagger exceptions at all; just non-initialized property. Could it be related to permissioning in some way? The only danger permission that i have is device's location acess, and it've beed held and tested. After all, if there is a posibility of supporting/versioning issue, what other aspect could it been related to? Thanks in advance. UPD: Seems that presenter instance is bound to right after its , but un-binds when some callback action with Activity in role of listener is triggered. So, it looks like that Kotlin looks up to presenter again, but finds it uninitialized. Still don't get why this happens only on newer platforms. "
3292	q3292	0.33979213462266783 "Kotlin coroutines: Switching context when testing an Android Presenter"," I've started using kotlin coroutines in my Android project recently, but I have somewhat of a problem with it. Many would call it a code smell. I'm using an MVP architecture where the coroutines are started in my presenter like this: The function is implemented this way (in my BasePresenter class that my WorklistPresenter class extends): The problem with this is that I'm using a UI coroutine context that depends on the Android Framework. I can't change this to another coroutine context without running into . To be able to unit test this I've created a copy of my BasePresenter with a different implementation of : To me this is a problem because now my BasePresenter has to be maintained in two places. So my question is. How can I change my implementation to support easy testing? "
63	q63	0.3385325957241626 "Unresolved reference dagger 2 + kotlin + android gradle"," I'm testing out Dagger 2 with Kotlin in an Android project. I was inspired by the Android Clean Architecture repo. I have two modules in my gradle build, one is \"app\" and one is \"module\". Module contains one class call Model. In my app gradle module I created a dagger module called \"DaggerModule\" with a Model provider. When I try to build the project, I get compilation errors: When I try moving the Model class from \"module\" module to inside of the \"app\" module everything compiles w/o error. Trying to figure out if I'm doing something stupid, or if I should file a bug somewhere. For reference here the snippets of the problematic files: DISCLAIMER: This is my first time test driving Dagger 2 and am a gradle newb. The sample project is the minimum code I could find to display the problem. I'm not expecting it to do much :D. "
1064	q1064	0.33611722318795884 "How to inject primitive variables in Kotlin?"," I am using Dagger2 for DI in my Android app, and using this code for injecting classes into my Activity is fine: but, modifier is not allowed on primitive type properties in Kotlin (for instance ), how can I do something like this? when I remove from this code I get this error "
5427	q5427	0.33611722318795884 "Implimentation android.arch.paging:runtime:1.0.0"," After adding the library to gradle: With the PagerListAdapter in the project, it produces an error: \"Add library 'Gragle: android.arch.paging:runtime-1.0.0' tо classpath\" Someone faced such a problem? "
4928	q4928	0.3358069671904499 "Android Architecture Components: Gradle sync error for dependency version"," I'm trying to add ViewModel and LiveData to a Kotlin app. I have the following dependencies added to my module's : I'm given the following error: Removing the first line () fixes the issue, indicating that the error is coming from there, but I can't figure out why. "
1854	q1854	0.33492181185888004 "With 'kotlin-kapt' plugin, Android Studio doesnt provide specific errors about Dagger 2"," I use Kotlin with Dagger 2. The problem is, when I make mistake while implementing Dagger (e.g., miss for class constractor), IDE doesnt show specifically where mistake is. Insead compiler error is always the same: Class with a deliberate mistake (commented @Inject): Project build.gradle file: Module build.gradle: "
1114	q1114	0.3343916343322281 "Dagger2 and Kotlin run failed cause by :app:compileDebugKotlinAfterJava"," I'm trying to implement Dagger 2 in a test app to learn Clean Architecture and dependancy injection in Kotlin language. But i got a problem, my DaggerComponent is well generated when i do a rebuild, but not when i want to run my app for testing, it fails and disappears. It fails with this error : While when i do a rebuild, this task is passed correctly So i don't understand why it fails. Here is my InjectorComponent : ContectDaggerModule : LocalStoreDaggerModule : I think the problem is caused because I inject dependencies in Object-declarations but all elements are static and Dagger does not appreciate it. So, i try to hack it with a simple override getter and injecting data but nop. Here is my \"hack\" : I follow this code and this tutorial I use these dependencies : "
3006	q3006	0.3311807397190016 "android.support.v4.app.FragmentManager cannot be provided without an @Provides- or @Produces-annotated method"," So i'm quite new to Dagger and trying to \"daggerify\" Kotlin MVP project with activities plus independent fragments plus independent navigation. The fact that i'm using a good few views based on support lib's Fragment made me try recent dagger android support features. After some struggling with compononent graph building i've faced the issue which is represented by this error: Here is some code. App: AppComponent: AppModule: BaseActivityModule: BaseFragmentModule: BaseChildFragmentModule: Sample MainActivityModule: I treat fragments as independent views, so each fragment has 1 View Module and 1 Presenter Module ATM. Here is the sample of fragment's DI parts: Gradle dagger dependencies: I've tried to move AndroidSupportInjectionModule::class one level higher, to main component's modules array. I hope it's framework-related code generation issue and I just have a bad understanding of support mechanism behaviour, because all module's parts where @Provides is supposed to be already contain this annotation. As it can be seen from MyApp class code snippet, currently i'm stuck to extend MultiDexApplication, so i wonder could this issue be related to MultiDex supporting. The situation looks strange to me, so I'd like to be pointed in the right direction by more experienced dagger users. EDIT: Here is BaseActivity code: BaseFragment: Also, full error code was added to the top. "
3353	q3353	0.3284113640104591 "How do I notify in Android the ViewModel when a background job has finished creating a new record using LiveData?"," I have an application which from one activity triggers a background job using JobScheduler. This job inserts in a database using Room once it's done. To notify the ViewModel I'm using LiveData. I have set up a main activity which uses ViewModel and everything is injected with Dagger 2. The problem is as follows: when I launch the main activity the list is populated as expected. However when from other activity I schedule a job and said job is finished and a new record has been inserted in the database the main activity does not update. Moreover, if I update a record from the main activity (without using a job) the view refreshes as expected, which makes me believe that the problem has to do with the ViewModel not detecting when a record is inserted using a job. If I'm using LiveData, isn't it supposed to catch all the new insertions? How could I manually notify the ViewModel of the new record? Edit: Repository: Here is the ViewModel: This is the job: More edits: I found out that the instance of the repository on the App is different that the instance of the repository on the background job. This makes the LiveData unable to trigger new changes when there are new records inserted in the DB. So my guess is that somehow I have to check if the app is on the foreground and if so inject the current instance of the repository into the job. If not, then the dependency graph must be created and as the job executes without the app running. Here are the relevant parts of DI configuration: AppComponent: AppModule: Application: If there is anything else needed just let me know. "
3642	q3642	0.32665107982224323 "Android Architecture Components how to achieve two-way bindings for objects with ViewModel"," Here is a very basic view model as such I'm trying to achieve two way binding as shown below This works as expected but when it comes to binding the object: I'm getting an error: The expression viewModelPersonGetValue.getName() cannot be inverted: Two-way binding cannot resolve a setter for java.lang.String property 'name' It appears that I am missing something, any ideas? (I am using Android Studio 3.2 canary 1) "
2580	q2580	0.32665107982224323 "Error while annotation processing with Kapt and Dagger2"," I have spent some time with my error but without any positive result so I maybe someone can help. I have 3 modules in my project : app (android), data, domain - both pure kotlin. All DI is in app module. ApplicationComponent & ApplicationModule: LoginSubComponent & LoginModule: and I am injecting it like below in LoginActivity: This configuration causes error: I can not use DI now because of this error and I am almost sure that Java version should work fine with this configuration. Do you have any suggestions? "
1032	q1032	0.32377891120708 "@Inject set Not Injecting Property"," I am attempting to use the Android Dagger ‡ implementation and inject a into my class: But I get an stating that the \" property has not been initialized\": This is the class used to create the and inject the dependencies: And the interface: I am using the annotation on the property accessor, as outlined in the documentation, but it doesn't seem to be working. What am I doing wrong? "
2217	q2217	0.3219936654064136 "Using @Component.Builder with constructor params"," I'm trying to learn dagger and kotlin and mvvm in one so please forgive me if this question is odd. If I have a NetworkModule, which basically provides retrofit to the app, I think it would be a good idea to pass in the base url for which we want to build retrofit. I can do it the old way by passing it in via the App's component build function, but can't figure out how to do it via the @Component.Builder method. Attempt: App.kt AppComponent.kt NetworkModule.kt The error is quite clear but I still don't understand what it means :) . I tried to force the module to create a public setter for the base url (although I think that's not needed). "
4392	q4392	0.31923366914578066 "Kotlin singleton getter in ViewModel"," I'm studying Android Architecture Components. How to implement singleton getInstance() method using Kotlin ? I did this using Java-like style (getLocation), but it is not kotlin-like. "
2499	q2499	0.3175078764105684 "Kotlin Error: Dagger does not support injection into private fields"," I use in kotlin activity ViewPager and I want in Kotlin Fragment use the dagger injection. I have got Error: Dagger does not support injection into private fields. In Java Fragment the dagger injection work. Why can i not inject dagger in kotlin faragment ? in my kotlin activity my kotlin fragment messages gradle build "
399	q399	0.3160218221946969 "How to inject test overrides into the default dependency graph?"," I would like to inject mocked overrides into my Android instrumentation tests using Kodein. I don't know which is the optimal approach to do this. Here's what I have in mind: My app uses a application class. The served Kodein instance holds all dependencies required by my app. In my tests I would like to inject mocked overrides for specific dependencies to test behavior of the app in various situations. Overrides should be different for each test, and should be injected before/while the test runs. Is the configurable Kodein extension sensible in this situation, or is there a simpler, better suited approach (and if so, which)? "
2419	q2419	0.3150018708915661 "Dagger2 - FragmentSubcomponentBuilder does not implement AndroidInjector.Factory"," I'm using dagger 2 and trying to translate my Android project from Java to Kotlin. After successful build i'm getting runtime error: MyFragmentSubcomponentBuilder does not implement AndroidInjector.Factory With Java this error not appeared. And also i noticed that in my module ActivityBuilder all methods are unused after build (they must be used in generated subcomponents classes). How can i setup my project to use dagger 2 and kotlin correctly ? my top level gradle.build: And app build.gradle: As you can see i not using annotationProcessor for dagger 2 (only kapt), and also i added generateStubs = true. But i still getting error in runtime. "
3110	q3110	0.3101808915966406 "Android Architecture Component ViewModel - How to mock ViewModel on test Activity?"," I'm trying to setup UI testing similar to GithubBrowserSample and it looks like the sample project only has mock for but not an example for . Here's my code where I am trying to test the by mocking . But the is not getting set before in Activity. Can someone help me about this issue please? "
217	q217	0.3101808915966406 "JsonView in Spring + Kotlin"," Server returns empty json with JsonView: I use only bean to configure : Controller: Driver table entity: Views object: Dependencies list: How to configure correctly in my case? May be I forgot something? "
3347	q3347	0.3064398813632591 "Using Dagger2 @Subcomponent.Builder incorrect report"," When I using , the error is reported like this: And the code for looks like this "
3279	q3279	0.3038182678990806 "Why Dagger's Reusable scope is Slower than Singleton?"," I've always thought that, when working with Dagger2, we should use scope instead of if we don't need the guarantee to get always the same instance, since used double checking, which is expensive and slow... However, I've made a simple performance tests and here are the results: Here is the code: The same phenomenon when constructing heavier class (I've tried with ) and with annotated methods instead of constructor injection. Did I make a mistake in my test or simply is slower? If so, where should we use it? Does it have any benefits over ? "
156	q156	0.30224736590922974 "In the Injekt library for Kotlin, how do I create local scopes such as for each Android activity?"," In the Injekt documentation on Github, it says that scopes exist but it isn't clear how I can use them to create a local scope for each Android activity, that have their own factories and instances but can also use some from a parent scope. The variable appears to be a global scope, and I see and but no examples of how to use them, or how they link to parent scopes. The only way I see is to create separate instances and call them, OR call as a global scope. This works, but is clumsy. No obvious way to link, nest, delegate or inherit. Is this supported, and if so how? Note: this question is intentionally written and answered by the author (Self-Answered Questions), so that the idiomatic answers to commonly asked Injekt + Kotlin topics are present in SO. Other answers are also welcome, there are other styles of how to do this! Disclosure, I am the author of the Injekt library. "
227	q227	0.30160012630206523 "Kotlin Dagger2 cannot find symbol ApplicationModule_ProvideApplicationFactory"," I'm trying to use Dagger2 with Kotlin but today trying to compile got this error: (App) Build.gradle root build.gradle Application class Application Component Application Module It generates DaggerApplicationComponent but when i try to run application it fails with this error. I've already tried to clean and rebuild the project but it didn't work. Any help will be greatly appreciated. "
1197	q1197	0.30160012630206523 "Kotlin + Dagger 2: Dagger* files won't generate"," I started using Kotlin and Dagger 2 together for the first time. I assumed everything is the same as in Java, but apparently, not quite. Dagger won't generate Dagger*files for me. Here is my code: Components: Modules: Scope Annotations: This is basically my whole DI system which I was using in my java code successfully. But with Kotlin, for some reason it does not work. I have also added: to like: And in dependencies I have: Basically, this it https://github.com/ribot/android-boilerplate transformed into Kotlin. "
3428	q3428	0.30071036290113085 "@Provides and @Binds methods in same class Kotlin"," After dagger 2.11 we can use a @Binds annotation and mark our Module as abstract in this case which is more efficient than a concrete. If my Module has both @Provides and @Binds methods, I have two options : Simplest would be to mark your @Provides instance methods as static. If it is necessary to keep them as instance methods, then you can split your module into two and extract out all the @Binds methods into an abstract Module. The second option works fine in Java and Kotlin but the first option works fine in Java but I don't know how to implement the same in Kotlin. If I move @Provides method to Companion object it throw . How can do this in Kotlin. Second Option:(Working) ApplicationModule.kt First Option:(Not working) ApplicationModule.kt Generated Java file for first option: Update: Thanks to @David Medenjak the link you provided in comment made everything clear I came across two ways to achieve the first option. Updated code: First Option:(Working) ApplicationModule.kt or Both works just fine but for some reason the first option does not look appealing to me so I prefer the second option. "
224	q224	0.2995303461709787 "Dagger skips Factory generation for Google Services module when using kapt"," I have an Android app that I've been converting to Kotlin, and I've run into a roadblock with Dagger when it comes to a particular module. In my project , I have: And in , I have the following relevant setup: I have an application component: And the : When I build the application, I get the following errors coming from the generated `DaggerApplicationComponent, saying it can't find the symbols for these classes: There don't appear to be any other errors in any of my other modules (there are plenty), and all the other modules in for that component appear to work as well. What I don't understand is what would be causing this to fail building the factories for this module, but not others, and why it's failing so silently. Same structure builds fine in the Java version of the application. I've tried using instead of for , but that seems to skip dagger compilation entirely. I've tried any number of configuration changes to get this working but I always get the same results. Sometimes, but not always, I'll also get this message printed before the errors: I'm not sure what that means, and I'm not sure if it's related to the missing compilations, nor do I know how to fix it if it was. "
3926	q3926	0.299230047295874 "How to reuse AsyncTask that is injected by Dagger2?"," In it's method the fragment calls the presenter to fetch weather data. The presenter starts an which fetches the data, returns it to the presenter and gets displayed in the fragment. The problem is, if I open the fragment(and fetch data), switch to another activity and then return to the fragment I get the following error: I didn't have this problem before switching to dagger but now that dagger only creates one instance of the I don't know how to fix it. I hope somebody can help me! Fragment: Presenter: AsyncTask: "
3113	q3113	0.2990214933783532 "Named injection not working"," I have 2 injections of the same class and I am using them to create to 2 retrofit API clients: Retrofit instances: OkHttp: API instances: Both api functions receive retrofit instances with . I tried toggling the value of 2 retrofit instances but nothing changed. Only when I removed from both retrofit instances, the API instance was created without . I also checked the bytecode but the annotation is present there "
2401	q2401	0.29865798815865285 "Android Kotlin dagger 2 ViewModel injection error"," I'm trying to use new from arch android library on my project. I'm studied a lot of sample project on github. Finally I want to implement this architecture on my project but I can't build it. Gradle console: Codes: Any idea on how fix this? "
1867	q1867	0.29787033745581976 "Dagger and Login Credentials"," Im looking in a way to create a Dagger2 component to store UserCredentials after password validation i have 3 activities -> Login, Home, About i want to create a LoggedUser component after password validation at Login and than @Inject this UserLogged at Home and About, im trying to avoid multiple database access (my case ask for it) and than when user click close Home or About activity, it return to Login and destroy the UserLogged and than restart the process, but im a little bit lost how to create a Custom Component for @ActivityScope to be created at Login but destroyed at Login too Curreclty im using Kotlin + MVP and Injecting Field at presenter in this way: the component is build in this way: my AndroidModule: my AndroidComponent "
501	q501	0.2942293992960304 "Dagger inject on superclass and sub-class"," BaseFragment class RoomsFragment class AdapterModule class AppComonent class As you can see i'm trying to Inject objects in both superclass and sub class, but it is not not working as expected. Injected objects work find but Injection fail. Any solution ? Fix: I forgot to add interface for sub-class in ApplicationComponent. Since its superclass interface was present it was not throwing any error at compile time. "
5251	q5251	0.2923630168586328 "Failed to resolve: androidx.lifecycle:lifecycle-viewmodel-ktx:1.1.1"," I'm trying to use the new Navigation Architecture Component for android and I'm getting the error Failed to resolve: androidx.lifecycle:lifecycle-viewmodel-ktx:1.1.1 when I'm defining the lifecycle_version to \"1.1.1\" I'm basically just copying and pasting what is in the documentation so I'm running out of ideas of what is wrong in here :( "
319	q319	0.29029077612235554 "Dagger inject interface in base class"," I want inject interface implementation in abstract class constructor and use it in child class. I have compile time errors: Example in kotlin. versions: com.android.tools.build:gradle:2.1.2 ext.kotlin_version = '1.0.3' compile 'com.google.dagger:dagger:2.4' provided 'org.glassfish:javax.annotation:10.0-b28' kapt 'com.google.dagger:dagger-compiler:2.4' Here is case. Decompiled java } "
3768	q3768	0.2902199401647126 "In Android MVP, should a presenter return a value?"," I try to learn MVP, I have some question to ask, should a presenter return a value? something like this: or like this: "
3074	q3074	0.2902199401647126 "Inject only certain params in constructor"," I have the presenter is a default parameter. I want to inject only . Now I have the exception Is there any way to define parameters which I want to inject in a constructor? "
2441	q2441	0.28967374469127477 "Dagger 2.11 - how to make Activity and Fragment share common values?"," I am currently learning Dagger 2 on Android and I would like to inject the Activity's injection into the Fragment, but I do not know how. This a working setup, that shows the values being injected into the fragment and the activity. Sorry for the wall of code, I simplified my code so that it only contains the relevant parts. The is created inside the Application: MainActivity: MainFragment: So I've found out how activity and fragment can use the same class. I'd like to inject the same instance of in both and . How could I gain access to the Activity's injected without changing the code in ? Basically, I don't want the to know anything about how it is injected. "
1298	q1298	0.28871221399963576 "Application does not implement dagger.android.HasDispatchingActivityInjector"," I have a subclass of Application that I am conforming to HasDispatchingActivityInjector, but when I try and run my app it will crash, saying: This is my Application subclass: Has anyone else experienced this error before? Thanks "
2200	q2200	0.286996262949832 "Passing lambda as argument in Kodein"," I am using Kodein for dependency injection on Android (in Kotlin, of course), but I am struggling with one aspect: I can't seem to pass a lambda as an argument to a factory. It compiles correctly but fails at runtime (something I though Kodein as meant to protect against). In my Application class, I do the following binding: In my activity, I invoke it like this: I also tried this unsuccessfully: But I always get the same issue when I run: I'm still pretty new to Kotlin, so I'm not sure exactly where I have gone wrong. Is there a quirk or idiom in the language I have missed or is there a limitation of Kodein around lambdas as arguments? "
5265	q5265	0.286996262949832 "Initializing Firebase in Modulair Android project written in kotlin gives not initialized error"," I'm having difficulty trying to implement firebase into an modulair android project written in kotlin. My structure looks like this: App Feature Base And then in my main activity oncreate I'm calling the FirebaseApp.inialize(this) My viewmodel with livedata looks like this: But when i try to run the app i'm getting this message I also tried creating an class extending my application and calling firebaseapp.initialize(this) and adding this to my manifest but i still got the same error. Manifest: BaseApplication.kt: My feature gradle "
4402	q4402	0.283203384270463 "How to set error label with TextInputLayout in the viewmodel with kotlin"," I need to do some input validation for my that is wrapped with . I'd like errors to appear below the line if the input is done in wrong format. All the logic is done in the viewmodel instead of the view(fragment or activity). But I can't seem to access the view through viewmodel, for instance: doesn't work in the viewmodel and doesn't work in the viewmodel either. Any idea? "
4914	q4914	0.2824980363874157 "Dagger2 inject generated class"," I created my own annotation processor library that generate a classes for user. But I got an error while providing those classes using Dagger2. Here is the error message: Can anyone explain me how to inject generated classes with Dagger2? "
5331	q5331	0.28222544893785023 "IllegalStateException: Expected configuration ':module:debugFeatureCompileClasspath' to contain exactly one file, however, it contains 2 files"," I am working with multi feature android application with instant app and wear app.Here i am able to successfully run my application but getting following error during building APK or rebuild projects. My project has 3-4 module and one base module projects. I have already integrated all setup for multi feature instant app as per sample provide by google. https://github.com/googlesamples/android-instant-apps/tree/master/multi-feature-module I have one module(apimodule) where i have added all libraries and API dependencies. Following is my project dependencies structure. AppModule Added all module as implementation BaseModule ( Also added ) Added in gradle 3. apimodule Added in gradle Here is my one module1 gradle file. "
4029	q4029	0.28124159365243223 "Does R count as an android dependency?"," I want to build an app using Clean Architecture and I want to store the drawable id of an image in the presenter: My question now is can I use R in the presenter or does it count as an android dependency? "
4436	q4436	0.2795057627464412 "Kotlin + Dagger and injected constructors? I am lost on this"," I have the following class : Please ignore that this function doesn't do anything except return the value on 1. I am trying to get a handle on how the hell I work with this class, and it's injected constructor. In my main application class (This class is java, not kotlin), I need to use the class above... and this is how I am trying to do it : I am aware that I need to pass something into that constructor, but how? If it is injected, do I need some fancy syntax? "
3839	q3839	0.2765491727818872 "ViewModelProviders.get(...) in base class"," I'm trying to cut some of Dagger's boilerplate by moving some of my ViewModel instantiation in an abstract base class but can't find quite a good way to do this. My intent is to instantiate all my ViewModels from my base fragment for them to be ready to consume by all child fragments without having them do their own instantiation. My issue lies in retrieving the ViewModel using a generic (VM)- specifically here: . I also attempted that is not permitted BaseFragment ViewModelProviders.get(...) method signature Is this even possible? "
3980	q3980	0.2757235242483933 "Kotlin, Dagger, Nullable and Named cannot find value to @Inject"," I have a property that is type String?. I am able to @Inject the value fine until I try to add an @Named attribute to the property. Everything also works fine if I use a 'String' instead of the nullable String, but the value is nullable, so I need the '?'. In my module, I have: In my activity, I have: and I get this error: This works fine if I remove the @Named attr, so I'm fairly certain that the '@set:' is correct, but I could be mistaken. Any suggestions on how to make this work? (At the moment, I am considering wrapping this in a custom class so that I don't need the @Named, but that seems wasteful to me.) Full source code can be found at: https://github.com/gmadrid/DaggerWoes/tree/master/app/src/main/java/com/scrawlsoft/daggerwoes Thank you for your help. "
718	q718	0.2757235242483933 "Android Library, Kotlin and Dagger2"," I'm building an application that have two modules: the Core module, that is an Android Library (com.android.library) and the Application module (com.android.application). After I converted the Java files to Kotlin, the project is not compiling, giving me an error that the generated Dagger 2 files were not found (unresolved reference). But those files currently being generated under: What I'm missing? build.gradle (Core module) build.gradle (Application module) build.gradle (Project) ApplicationContext.kt (of my Core Module) "
3198	q3198	0.27460025295544255 "How to inject views of Fragments used in PagerAdapter with Dagger?"," I am developing an application that requires Tabs. It has an idea of a \"Category\" of place, eg Cafe, Park, etc. and each category is a Tab and each have a very similar structure of its contents and views. So I created a that contains a multiple instance of the fragment I created. My problem is how to inject views in each instance of fragments using dagger. "
