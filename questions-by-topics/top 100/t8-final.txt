2393	q2393	0.8825572890724891 "Dagger2- Retrofit is not injecting in ApiHelperImpl"," Hi I am trying to inject in class. I have below module and component. AppComponent.kt AppModule.kt PartnerApplication.kt ApiHelper.kt ApiHelperImpl.kt LoginActivity.kt LoginViewModel.kt LoginActivityModule.kt ActivityBuilder.kt I am getting an error Why is not injecting in ApiHelperImpl class. "
3036	q3036	0.8681013319492222 "Dagger2 dependent components"," In my app I have a component with Application scope (same as Singleton) that provides a ViewModel Factory, and a dependent component with Activity scope that injects the factory in a fragment. The application component is defined as follows: The view model module is defined as follows: The activity scope component is defined as follows: When I try to inject the viewmodel factory in the fragment I get this error: If I update the activity component to include the view model module, like this Then it compiles. My understanding is that dependent components have access to the injected members from the parent component if the parent component explicitly provides those members, as I do here with the so why do I still need to provide the viewmodel module in the activity scope component? "
5452	q5452	0.8646856056446233 "Dagger 2.15 - How to inject a dependency in Application class"," I am unable to inject a depency in DaggerApplication class The relevant classes are as follows Application Component: AppModule class: Not sure what is missing. "
3077	q3077	0.8572679372936236 "Dagger2 and qualifiers in dependent components"," I have an app component and a dependent component. The app component declares explicit dependencies, and the dependent component can inject those. However, when I have a dependency that I have to disambiguate with a @Qualifier, the dependent component is not able to inject that dependency. This is the app component This is the scheduler module: This is the qualifier: And this is the dependent component: This is how the scheduler is injected in the fragment: So why can the dependent component inject the bitmap cache, declared in the parent component, but not the UI scheduler? This is the error I get: "
8257	q8257	0.8494082058488804 "Injecting Activity object in MVP Koin"," I am using Koin to inject Activity to the preseneter, but existing instance of Activity isn't passed to the presenter. New one is created instead. What am I missing? "
5723	q5723	0.8393012578921724 "Is there any way to access contributing modules instances from application component dagger2"," I have created a small sample to test dagger2 implementation. I have created a utility class in which an Activity's instance is to be injected. Is there any way to get this utility class instance in Activity itself using dagger2 CoreApplication.kt AppComponent.kt ActivityBuilder.kt HomeModuleBinds.kt DialogUtils.kt Is there any way I can use DialogUtils instance in MainActivity Using dagger2 dependency cycle? For example using inject for DaggerUtils on MainActivity is causing cyclic dependency error "
4094	q4094	0.825276062881454 "Error injecting Kotlin using Dagger"," I am trying to inject the ModelViewFactory object in the ViewModel and I get the following error. Have been working on this for days cant seem to figure it out. Here is my ViewModelFactory } Here is the Fragment where I am trying to inject the viewModelFactory } Here is the ViewModel Module where I have the Provider methods for the ViewModels And here is the FragmentBuilderModule as well Here is the App Component "
3105	q3105	0.8187051015162728 "Dagger 2 not injecting sharedPreference"," Hi i am new to dagger 2 and trying to inject an instance of sharedPreference inside my MyActivity class below: Here is the component and modules I get the error below: "
9152	q9152	0.8022314818282825 "How to inject Dagger dependendcies anywhere, except Activity?"," I'm new to Dagger, so couple of things are still hard to grasp for me. I have a component: and a module: In Activity where I want to inject dependencies I use And here is a question: Just for understanding. If I want to inject , that provides by AppModule into child class. For example I have a class MainActivity with child class. And I want to Inject applicationContext only to this child, instead of passing it as parameter. How to do this? "
5446	q5446	0.794507117652542 "Provide interface implemented in Activity in Dagger 2 in Kotlin"," I have an interface like this it is implemented in MainActivity like this Now I have another class which needs the MainApiInterface.SourceView like this I have created Module and Component like this I am not sure how to provide the dependency in Modules and Provides. Any help is appreciated. Thanks "
1158	q1158	0.7925790549591754 "Dagger2 Compilation Issue in kotlin"," I am trying to learn dependency injection using Dagger2. I have created few custom scopes and Qualifier. I have created an application component where I wanted to inject certain global dependencies and also I have created an Activity component which will return certain instances based upon activity context. Now when I try to inject global instances in the Activity I am getting error as follows: Qualifiers ActivityContext.kt ApplicationContext.kt Scopes ActivityScope.kt ApplicationScope.kt Components ActivityComponent.kt Used in Injecting Activity class. FirebaseComponent.kt Used in injecting Application class. Modules ActivityModule.kt ApplicationModule.kt FirebaseAuthModule.kt NetworkModule.kt FirebaseChatApp.kt An Application Class BaseActivity.kt Super classes for all activities MainActivity.kt Where Objects should get Injected. What should I do to resolve this error. And what is the correct way of using DI. Since I am new to it. I am getting little confused. "
5360	q5360	0.7666058083085254 "Module must be set dagger 2"," I am trying to create dependencies using dagger 2 with kotlin. I am getting this error on runtime Here is dependency graph. Here is RetorfitMvpApi Here is the component. What am i doing wrong here? I am using "
674	q674	0.7582281129638703 "Dagger2 not working in android"," I have problem using dagger2 I create Component, Module, Provide and i called onCreate() in MainActivity here's my problem DI works fine in MainActivity but other file is not working. or TestClass and TestObject get error - lateinit property testInterface has not been initialized i don't understand why error occured in TestClass, TestObject. "
9312	q9312	0.7559694171941914 "Dagger 2 error: dependency “cannot be provided without an @Provides-annotated method\""," I've started using Dagger 2 with Android Injector and faced an issue I have 5 modules, that are composed into one component Network Module look like application Module look like ActivityBuilder is pretty simple: just combination of modules for Activities and FragmentsModule for fragments Delivery Module which used to provide all instances of the DeliveryActivity ViewModelFactory where the problem here, the compiler says that DeliveryListUseCase cannot be provided without an @Provides-annotated method "
4936	q4936	0.7389910924150755 "from one dagger2 module how to access the SharedPreferences provided in another dagger2 module"," Having the SharedPreferences provided from one dagger2 module, in another dagger2 module would like to use it, how to do it? the code below seems not working. /** the component */ /** the module 1 */ /** the module 2 */ "
5412	q5412	0.7302118399702836 "Dagger2 + Kotlin: lateinit property has not been initialized"," I'm trying to inject the ViewModelFactory into my Activity, but it keeps throwing this same error: lateinit property viewModelFactory has not been initialized. I can't find what I may be doing wrong. See the code above from my classes AppComponent.kt MainModule.kt MainActivity.kt TweetSentimentsApplication.kt "
7494	q7494	0.7263906848406976 "Dagger Kotlin qualifier constructor injection doesn't work"," I have following module with @Provides method with a qualifier Then there is my class that I want to inject this list into via constructor and the qualifier: I am getting this error but everything looks correct "
4966	q4966	0.7171464079158679 "Dagger2 AndroidInjector Class cannot be provided in ViewModel constructor"," Im using Dagger2 2.15 with AndroidInjector to setup my project, and I have run into an issue where I cant provide instances of my class into ViewModel. It fails when I try to run the code. How do I write my Activity module to provide dependencies in the ViewModel constructor? The error I get is: The code compiles if I move the function from to , but I need the Activity and I cant get my head around why it breaks. My : In my : The : The : The provided class: "
3299	q3299	0.7120265934887254 "Dependency injection in non-global activity scope done right. How to provide special MyActivity as Activity"," I am using dependency injection to provide global objects () and non global objects for activities only (). Now I wonder if I did it right and if it could be done better. The most interesting part of this DI implementation is the injection of the object into 2 different activities with restricted scope Here is the code The main app component The appclication module The module for the activities And now I want to inject a new to the and a new one to the . The approach is having a module for each activity like you see above in the annotation. The implementations of the 2 files look like this And The Question: 1) Now the and look very similar. Is there a better approach to provide to both activities without making them and withouth creating a module for each activity (becaues only needs an , not a special sublcass)? I had something in mind like that it only takes an instead of a specific . But how can I tell dagger to provide the as 2) And beside that optimizing in 1), is this a correct implementation? Update 1 I have solved it by the following implementation. Is this the right way to do this? Module that provides the as Module that provides the as A Manager module that is only And the Android injector for the activities "
8979	q8979	0.708301221031674 "Android dagger 2: dependency cannot be provided without an @Provides-annotated method"," Dagger 2 dependencies: My : My class: My : And for example my and : What i am trying to achieve - i need to inject an instance of to my activities and fragments. My viewmodels contains others dependensies. Also trying to separate dependencies for each screen. After build getting error: When setting as getting error: Is there any reason to mark ViewModel as or ? "
780	q780	0.697150052328589 "Kotlin Dagger 2 cannot provide Interactor"," I've started using Dagger 2 and faced strange issue. I have 4 modules, 3 of them in ApplicationComponent and the other one has different Scope (UsersScope). Problem with injecting into Here is my classes "
3918	q3918	0.6951651232782519 "Inject @ActivityScoped object into a Fragment"," How can I inject a module that is into a fragment. The module I need inside the Fragment looks like this (its injected fine into the activities) To bind my to I am using an to be able to inject into my i use this one I am having the following dagger component: with a regular context binding Now I am having the which enables injection into the fragments How can I extend dagger to be able to inject the within to (which itself lives in the )? "
5247	q5247	0.6943343692727281 "Dagger-android share dependencies between Activities"," I'm using dagger-android for DI. There're a few common dependencies I want to provide to every Activity. They depend on an Activity class but don't relay on a certain Activity implementation. Like this: Now I have to write the same code at every ActivityModule: I tried to provide these dependencies via but it turns out that Dagger generates separate Submodules for each Activity, and we can access to an Activity dependency only at the certain modules ( and at this example): So how can I provide such dependencies without duplicating code in every ActivityModule? "
1938	q1938	0.6872508217119285 "Kotlin dagger 2 Android ViewModel injection error"," I'm trying to use dagger 2 on my Android application to inject the new ViewModel from arch android library. From what I see on this sample https://github.com/googlesamples/android-architecture-components/tree/e33782ba54ebe87f7e21e03542230695bc893818/GithubBrowserSample I need to use this: And my factory is: But the project doesn't compile :( I have this error (Map<...> cannot be provided without an @Provides-annotated method.): Any idea on how fix this ? "
3451	q3451	0.6852402787509638 "Dagger AndroidInjector cannot be provided without an @Provides-annotated method"," I've done my Android projects MainActivity by means of the MVP pattern. So in my MainPresenter I want to inject a dynamic String, which then shall populate a TextView for instance: whereas the StringForTextView annotation qualifier is defined as: then I also have my Interface: which is implemented as: then in my module: The problem is, that I get an error What am I missing? "
3272	q3272	0.6822049055078758 "Dagger 2 Activity cannot be provided without an @Provides- or @Produces-annotated method"," I'm new to Dagger and I'm trying to implement a class that inherits from a class where injection is taking place. Things broke when I took out injection of one component in MainActivity and inherited it from BaseActivity. My AppComponentClass: My ActivityModule class: my ApplicationModule class: My two classes (both in kotlin) The error(s): Using Dagger 2 ver 2.9 Android Studio 3.0 both Kotlin and Java "
3706	q3706	0.6822049055078758 "Issue with injecting dependencies in Fragment (MVP, Dagger2, Kotlin)"," I`m new in Android. I try to build project on Fragments via Dagger2 and Kotlin with MVP pattern. I caught an error while building project. Here are my code: AppComponent MainActivityModule MainActivityComponent UsersFragmentModule UsersFragmentComponent Application.class MainActivity.class UsersFragment.class Please, could someone help me with this issue? Thanks in advance! "
2788	q2788	0.681031154743581 "Dagger 2 ContributesAndroidInjector provide activity to module"," I'm trying to figure out a less-boilerplate-y way to implement an that is used in all of my app activities. This is my current setup: ActivityModule: AppActivityModule(provides activities for AndroidInjectionModule) What I want AppActivityModule to be instead is: But this, quite understandbly, gives me an error My question is - is there a less boilerplate-y way to achieve what I'm trying to do? I know about and (from this answer) but this seems to only work if I have a module-per activity and bind the concrete activity type which I don't want in this case - I want to work with all activities. "
5633	q5633	0.6755436493914027 "Can not create instance of AndroidViewModel"," I am trying to implement Architecture Components in the app but I am facing an issue in creating the instance of androidViewModel. Please help me out to resolve the issue. Here I am trying to create an instance of the LoginViewModel class but getting below-mentioned error Error Activity ViewModel BaseViewModel "
2379	q2379	0.6739155583263943 "Dagger 2 cannot access Retrofit"," I'm trying to provide an instance of Retrofit to my Repository using Dagger 2 (with Android module). Buy I'm facing the error: Other instances like Picasso was injected with success, I just have problems with Retrofit. My Module My Application component App Component Activity Builder My repository' My Remote repository Gradle Log Thank you! "
8165	q8165	0.672792114933361 "Kotlin Android MVP + Dagger 2 lateinit property presenter has not been initialized"," Trying to use Dagger with Kotlin on Android. And got the exception: The app is special for testing. I get earthquakes and show them on a device screen. All I want is 1. Inject the presenter in my Fragment (View) 2. Inject the api in my presenter There is the structure of my project: There are two modules and components there, as you can see: And components: and There is a contract: Application class: Fragment (where I want to use Injection) And my presenter What do I do wrong? "
1735	q1735	0.6710815520978618 "How can i inject object into presenter in android kotlin MVP mosby app with dagger"," I am trying to get dagger working in my application. After creating Module Component and MyApp i can use dagger to inject database service into view but i am having trouble doing same thing with presenter. Code: Module Component AppModule MainActivity After injecting estateService this way I can use it, but I cant figure out how do I inject service directly into the presenter. I tried doing it like this but it isn't working. Should I just pass injected objects from the activity? or maybe I should pass MyApp as an argument or make static method allowing my to get it from any place in the application? "
6999	q6999	0.6660791142067847 "How to declare Dagger activities and fragments for Android feature modules?"," How to declare activities and fragments for non-base feature modules? As we had only a base feature module and a single feature module, we could declare the class in the feature module and had our graph be loaded there. This meant being able to use and the standard dagger approach for android. Now, adding more feature modules, we can't do the same. The application class must stay in the base feature module, which means it can't declare, for example, activities belonging to features. My thoughts: Since will look for the activity injector in the app class, we can't use it. In other words, no . So the idea is that activities belonging to feature modules should, instead, create their own component and inject themselves. Still, it should be possible for fragments to use the thing. Right? The class will get the injector from the parent activity, so if we fix our activities, they will expose the correct injector so that fragment code can be left as is. For this reason, the feature activities must implement and have a annotated for fragments. But two things don't work here. Feature fragments and activities still need some annotated objects from the base feature component graph, so our must somehow be linked to the . It seems that the only way of doing so is by using the parameter: The creates this component, passes the to its builder, and injects itself. However, compilation fails due to errors. Some of the objects in the special feature module need , annotated objects from the base feature component, and dagger doesn't seem to find them properly. (these objects are not in , but rather in its attached modules) How to fix this? I have read that exposing them directly in , rather than in its dependency modules, should fix the issue, but it's not something we would like to do, as there are lots of them and it would be yet another list to be maintained. As is, the unscoped depends on the scoped . This is not possible, so we have to add a annotation. Now we are told that the subcomponents generated by for fragments, unscoped, may not reference scoped bindings. So we add a annotation there. Now we are told that these subcomponents may not reference bindings with a different scope! Which are objects provided by the base feature graph. How to fix this? "
8163	q8163	0.6624318605226214 "Is there any way to use Koin inject with generic?"," I heve base class and I would like to use Koin injection on this base class like: I know there are solutions for inject viewModel but not for simple injection. So is there any way to use Koin injection with generic type? "
9298	q9298	0.6617874347069446 "Presenter cannot be provided without an @Provides-annotated method"," I'm struggling seeing why I get this error: I have even tried to just strip out everything and make it as simple as possible, but I still get the error. What am I doing wrong? Component: Module: Presenter: "
8795	q8795	0.6576888939766916 "Why @Named dependency is ignored?"," I have a module that provides value: : And build fails: It works for other dependencies, but not for this one. Why? "
6691	q6691	0.6516244186331428 "Bidirectional dependency with Dagger 2"," I'm experimenting with VIPER architecture in my Android app. I use Dagger 2.11 for DI. Dependencies I have for each VIPER module are: and are linked via and interfaces. and are linked via and interfaces. Some other dependencies, we are not interested in. This is how my Dagger Module looks like: Now when I call in my the following happens: is injected into via interface is injected into via interface is not injected into , because of type (to prevent cyclic dependencies). After the first call of is injected into via interface. The problem is that in the 1st and 4th steps different instances of are injected. How can I make dagger inject the same presenter into and ? Or maybe I need to fix the dependency cycle in the other way? "
1762	q1762	0.6469914610551394 "Kotlin + Dagger - inject Map for ViewModel factory"," I'm using the new Architecture Components with Dagger2 and I would like to inject my ViewModels using a Factory class. The Factory class is itself injectable. This all works well when the Factory class is defined in Java, but when I convert it to Kotlin, Dagger2 does not know how to generate the Map for the constructor, while in Java it knows how to do so. I presume the difference is that, after conversion, the Factory class uses the Map from the kotlin package, as opposed to from java.util.Map package. How can I get Dagger2 to generate the map for the Factory constructor? Here's the Factory class and this is the error I tried creating a module to provide the map, but that didn't help. "
2207	q2207	0.646885985781248 "kodein - data's value injected are not data's value retrieve"," In my class, i put my injected data to true, wich is initialized to false in my class. But in my class, my bolean data is not but . Thank you for your reply "
265	q265	0.6463371828344496 "Dagger 2 error: dependency “cannot be provided without an @Inject constructor”"," I'm trying to use Dagger 2 in my Android project. For starters, I want to make use of two components responsible for injecting application-wide and activity-wide dependencies respectively. As a basic reference, among other things I used this answer. So there are two different ways of setting relationship between components: with the annotation and with the parameter. If I go with the first one, my works fine. But as soon as I try to inject dependency from the , I get this build-time error: With the second approach, I get this error for all dependencies. Knowing that I do have provision methods, this error message is frankly of no use. Here is a couple of other possible sources of this error I've managed to google out but they don't seem to be the case: Scoping problems. Ambuiguity due to the same return type from different provision methods (the problem persists even if I remove methods providing ). The following code is in Kotlin but I reckon it should be pretty straightforward. Application component Activity component And below is how these components are used. Application Activity BaseFragment (where the actual injection happens) What am I missing? Thanks! "
1896	q1896	0.6453066809867989 "Dagger 2, can not inject presenter in my activity"," I am new in Dagger2. I have a problem with inject presenter in my activity I try to resolve my problem after read this article https://android.jlelse.eu/inject-interfaces-without-providing-in-dagger-2-618cce9b1e29 but it was not helpe me. I hope someone help me, I spend all day tring to resolve it... here is my modules: here is my component: here is my App class: here is my activity: here is my presenter: here is interfaces for presenter and view: and here base classes: and always when i build i have this error: how can I resolve it? "
3644	q3644	0.6415904287798835 "How to initialize/inject generic ViewModel in BaseActivity by Koin injection on Android/Kotlin App"," I'm building the architecture of a new Android application using Kotlin and Android Architecture Components (ViewModel, LiveData) and I'm also using Koin as my dependency injection provider. The problem is that I'm not been able to initialize the ViewModel in a generic way inside my BaseActivity via koin injection. The current code looks like this: I'd like to know if is there a way to do this in Kotlin because I'm pretty sure I would be able to do in Java easily. Thanks. "
6617	q6617	0.6405396122143097 "What is the point of injecting a ViewModelFactory in Android - Dagger 2"," I have recently started with Android Development, and coming from an iOS background, concepts like Dependency Injection frameworks and ViewModelFactories are a new thing for me. In all the tutorials I saw, ViewModels always extended the ViewModel class provided by . If the viewModel had parameters then a ViewModelFactory had to be created and injected in an activity by Dagger will then be in charge of creating ViewModels. This all works fine, however, I'm not really understanding the point of a viewModelFactory when I can just inject the viewModels directly into an activity sort of like this: And in my Activity So what is the point of a ViewModelFactory when I can simply inject a viewModel to in my activity right away? "
2319	q2319	0.6355835585850835 "New Architecture with Dagger and Kotlin"," I have a problem with New Architecture components in Kotlin, when I create ViewModel component in recomended way (in onCreate() method) the result is as suposed: after activity orientation changes, I got the same instance of ViewModel as before Here is the way i create this But when I have used Dagger for inject ListViewModel I got new instance of ListViewModel every time Activity was recreated. Here is a code of Dagger ListActivityModel. } Then ListActivity onCreate() method looks like: And there is what I have notice after logging: The error I have received : comes from Android class HolderFragment with package android.arch.lifecycle. There is something what I missed working with Dagger and new arch components? "
9174	q9174	0.6338475351242292 "Is it possible to build a project with Dynamic feature modules and Koin?"," I have an app with different modules but the project is growing and we need to split the project in different Dynamic feature modules because the users (probably) would not need all the features. My problem is that Koin needs to be started from the Application class with all the koin modules that the app is going to load but from that class I don't know which modules I have to load and :app modules does not import the other modules in gradle's dependencies (the other modules have to implement :app module). My question is if it is a way to load Koin modules from an Activity in :app or the other loaded features. "
6406	q6406	0.6328839714113283 "Provide function dependency using Dagger 2"," I would like to provide a function as dependency using Dagger 2: Unfortunately, it does not seem to work: What am I missing here? "
7882	q7882	0.6328839714113283 "MVVM and Dagger 2 - Benefits"," We are developing new Android application. We are trying to use MVVM and Dagger 2. What are all the benefits of using Dagger 2 if we use MVVM? "
1975	q1975	0.6306714893061661 "Dagger can not provide injection with Kotlin"," I have this issue when I try to use Kotlin and Dagger 2 . \"interface cannot be provided without an @Provides- or @Produces-annotated method.” This is my Module class: Audio.kt is interface and Dagger has problem to inject it. Inside the activity module I am returning AndroidAudio instance, which implements Audio interface. I am not sure what is the problem here. In Java I have had many times injection of interfaces and I never had this issue before. If somebody can help me I will be so happy. Thanks! "
1924	q1924	0.6284909183600855 "Dagger2 not inject"," I am a newbie to android and trying to use Dagger2. I spend whole night and still dont know why my dagger does not provide presenter. Here are my code (I use Kotlin) AppComponent PresenterModule App This is the presenter And finally, this is my SplashActivity When I run these code, I got this error Lateinit property presenter has not been initialized, which means that \"Inject\" does not work "
5537	q5537	0.627730252088968 "Struggle to get the same ViewModel instance"," I'm not sure if I understand architecture correctly in Android. I suppose ViewModel lifecycle is tie to the activity so we are expecting the same instance and it doesn't matter if we are passing the activity or fragment context to ? Anyway, here's my ViewModel: Here's my Activity: and lastly here's my Fragment: I'm getting the below output in Logcat: It shows the value did not update to Cavaliers. am I using ViewModel wrongly and should be using Dagger to achieve singleton? "
1507	q1507	0.6244064234432963 "Dagger2 inject a presenter into a Kotlin Activity error"," I use dragger2 to inject a presenter into a Kotlin Activity, the presenter is null,here is my code: } The method getPresenter() be called in MvpActivity's onCreate() ,and the MvpActivity is a java class. Initial the presenter need some instance provide by ProductFilterModule,Maybe presenter should be initial after Component injected,i guess. when I run ,it throw KotlinNullPointerException,the presenter is Null. If i use java to do it,it no problem. "
3787	q3787	0.6187146310970218 "Dagger 2 Kotlin - @Named qualifier for @Binds method"," I wanted to have @Named qualifier for object that's returned from @Binds method, but I noticed that's only possible through static provides method, which I couldn't figure out in practical implementation. So below is what I wanted to achieve. I have a custom UserScope, which would contain all activities/fragments/viewModels after user logged in, I have LoginViewModel in AuthViewModelModule and LeadViewModel an other VM in UserViewModelModule both VMModule binds VMProvider.Factory and for that reason I need to have @Named qualifier for the VMFactory instance, so I could inject @Named ones in respective activities/fragments. "
1447	q1447	0.6184067748126478 "Android ViewModelProviderFactory in kotlin"," I'm experimenting with the Architecture Components from Google. Specifically I want to implement a ViewModelProvider.Factory to create a ViewModel that takes constructor parameters, like so: My ViewModel looks like this: Anyone knows how to avoid the nasty cast in the end : "
8123	q8123	0.6173067099174745 "How to inject a LifecycleOwner in Android using Dagger2?"," I happen to have an Android lifecycle aware component with the following interface: All Dagger specific components and modules are configured correctly and have been working great so far. In each activity when I need to use the component I do the following: Now I want to get rid of and denote my component like this: And provide the within the scope of individual activities (which implement the interface by extending ). Is there any way to do it with Dagger? "
8743	q8743	0.6173067099174745 "How should I ProvidePresenter with Moxy and Dagger 2?"," I have faced with a problem, that I dont know how to initialize my presenter inside method with same named annotation . Using I am providing several classes into presenter: Now because of I dont have an ampty constructor for my presenter I have to provide it using annotation, but I dont know how to do it. I can't find an example for Dagger 2 approuch. Here is my Di tree: : : just providing some schedulers and context. : Could anybody please help me with this problem? How should I properly make this provide method? "
2700	q2700	0.615181326415355 "Android: Internal Compiler error while using Dagger 2 (Kotlin)"," I am trying to use Dagger 2 in Android. Implementation is very straightforward. Below are dagger 2 related s and s: ApplicationComponent.kt MainActivityComponent.kt AppModule.kt GoogleApiClientModule.kt GooglePlacesClientModule.kt MainActivityModule.kt Below is my Main Activity where I am injecting the above components: Below is my where Dagger is initialized: When I run the app I am getting a internal compiler error. Below are my IDE logs: NOTE: MainActivityComponent is a SubComponent of ApplicationComponent. Even though ApplicationComponent has only one module at present, Further modules will be added in the future "
6479	q6479	0.6148221176811974 "Why Epoxy does not generate model class?"," I want to use Epoxy for my recyclerView with kotlin, but Epoxy Model does not generate PostModel_() class, what wrong with it? "
2161	q2161	0.6127802561074075 "Error: com.app.android.dagger.component.AppComponent (unscoped) may not reference scoped bindings:"," Hi I am using dagger2 in my android application. I have AppModule and AppComponent which provides . AppModule.kt AppComponent.kt In my application class, I am injecting but I am getting value null of it when I am logging. Stacktrace: When I remove from providesConnectivityManager then it works well. Does anyone know whats problem here ? "
9050	q9050	0.6110628919725248 "Dagger2 not generating DaggerAppComponent classes,am using Kotlin and using Android Studio 3.1.4"," This is the link to the project here https://drive.google.com/file/d/1wJr1CgSk2BVfiWYZHwx1rtHG4kzfTZ46/view?usp=sharing This is my AppComponent AppModule Class BoardApplication Class } Am using this def final dagger_version = '2.14.1' "
4824	q4824	0.6088247379788768 "Dagger2 inject generated class"," I created my own annotation processor library that generate a classes for user. But I got an error while providing those classes using Dagger2. Here is the error message: Can anyone explain me how to inject generated classes with Dagger2? "
6700	q6700	0.6087625140311939 "How to get component dependencies in Dagger 2 module using Kotlin on Android?"," I have a for on Android. I initialize the component by injecting the fragments dynamically. Now, I need to provide activity context to dependencies from the fragment module. I assumed writing a provider method with Fragment as a parameter will automatically get me the Fragment reference in the module, and I can extract the context out of it. But I can't compile my code. The application component also offers a Context, therefore I have added a qualifier to get activity context. That shouldn't create any issues I believe. Here's my code : Compilation Error: "
8435	q8435	0.6066666975576055 "Android MVVM Dagger 2 - ViewModelFactory Injection"," I am trying to perform viewmodel injection with dagger 2 in Android Kotlin project. So far my project looks like this. I have AppComponent looking like this My appModule: I created also Builders module for providing my Views: My view model facotory is taken from example on github project I bound factory in my ViewModelModule like this: Now everything builds until I add ViewModelFacotory injection in one of activities like this: When I build code afret adding @Inject I get following error: So far I couldn't find anything at forums so I would be thankfull if you could show my what am I doing wrong. Also I noticed that when I try to attach view model to my binding object in Activity I get type missmatch (it shows incomplete package name as required type) "
7777	q7777	0.6066666975576055 "The class cannot be provided without an @Provides-annotated method"," I want to inject a dependency (HomeViewModel) into my fragment (HomeFragment). I have a class (HomeViewModelImpl) which implemented that abstraction (HomeViewModel) and inside this class, I'm overriding parent's methods of course. The abstraction class (HomeViewModel) is an abstract class which extended from BaseViewModel. The BaseViewModel is a normal class in which extended from ViewModel class from the Android lifecycle component. The problem is I got an error when I want to inject into the fragment: HomeFragment: HomeViewModel: BaseViewModel: HomeModule: ViewModelKey: ViewModelFactory: ViewModelModule: BaseModule: AppComponent: Note: Please read inline comments on above snippet codes. All I want is set as an abstract class and inject it where I want. "
6651	q6651	0.6005706387498243 "MVP + Dagger2 + Kotlin: lateinit property presenter has not been initialized"," I setup my project to MVP architecture. I was able to setup MVP for and . Basically I have a list of images in , when item clicked, it will start which I've setup and already. ListAdapter.kt (Full gist here) PhotoDetailActivity.kt (Full gist here) But it said that: My full code is here "
4338	q4338	0.5966135181505965 "Getting Error for not Initializing Instance of class in my SharedPrefManager class.Not able to solve"," } E/AndroidRuntime: FATAL EXCEPTION: main Process: com.example.shikh.kotlinmysql, PID: 6600 kotlin.UninitializedPropertyAccessException: lateinit property mInstance has not been initialized at com.example.shikh.kotlinmysql.SharedPrefManager$Companion.getMInstance(SharedPrefManager.kt:59) at com.example.shikh.kotlinmysql.SharedPrefManager$Companion.getInstance(SharedPrefManager.kt:66) at com.example.shikh.kotlinmysql.Login$userLogin$stringRequest$2.onResponse(Login.kt:34) at com.example.shikh.kotlinmysql.Login$userLogin$stringRequest$2.onResponse(Login.kt:29) "
5921	q5921	0.5966135181505965 "Dagger 2 and dependency injection hell?"," How do you use dagger from Kotlin? I've been in a loop of fixing one compile error and moving to another and at the end I get back to step 1 Here is all I need: AppDependencies GenericActivityDependencies PerActivityDependency Here are my main dependencies: App Why do I need to once provide the dependency in the module and another time define it in the component? Activity Module HomeModule By this point, I have written more code than there needs to be in my whole activity. I get errors like can't inherit from a scopes component Can't generate Dagger gencode Subcomponent needs a different scope How do I achieve this? Is there a better di for kotlin? Is there a sample somewhere I could follow that has per activity module? "
7135	q7135	0.5941884422848812 "Using Dagger 2 singletons in View Models on Android"," I want my application to have the following architecture : On Android, people seem to usually have the dependancy injection in the activities, but I want to inject my repositories in view models. I have one particular viewmodel that uses a manually created LiveData In my RoomModule, I have this provider : The class DisplayScreenDataSource is very simple : I want this singleton to be available to an other viewmodel, MainActivityViewModel, so I did this : But when I run my application, the repositories instantiated don't have the same reference and when I update the value of one LiveData in one of my ViewModel, if I observe the LiveData of an other ViewModel, it is not the same LiveData so is is not updated. My guess is that I am not correctly instantiating the DaggerAppComponent : it is supposed to be created only once and eventually injected several times. Is that right? Where should I be supposed to store the instance of the DaggerAppComponent? In the Application class? I could have something like that : Is this the recommended way? "
3461	q3461	0.5936650924688148 "How to @Inject members in BaseActivity using dagger.android?"," This is my scenario: I want all my Activities to inherit from Within the , I want to inject (it helps me to manage the backstack and navigate between activities): The class needs a in its constructor: I want to provide from a object in : This is the rest of my components and modules: AppComponent.kt AppModule.kt ActivityBindingModule.kt BaseActivityModule.kt This is the compilation error message: "
6861	q6861	0.5906199451678014 "Android Dagger 2 Some Constructors can't Inject into ViewModel"," I want to Inject my Room Repositories and Rest Repositories into my ViewModel class. However, I can inject rest repository but, when I try to inject room repository, it gives error. And error is like that: error: [dagger.android.AndroidInjector.inject(T)] me.ibrahimsn.capsules.data.local.message.MessageDao cannot be provided without an @Provides-annotated method. Edit: Solution https://stackoverflow.com/a/51783147/10203775 "
8431	q8431	0.5902800340505785 "Instanciate ViewModel from Fragment with Kotlin"," I'm trying to create a instance of a ViewModel using Android Architecture Components in my Fragment with Kotlin and I obtain the next error: My ViewModel: My fragment: I don't know what I'm doing wrong :( "
2312	q2312	0.5902800340505785 "kotlin 'onCreate' overrides nothing"," I am using component development, in my common module BaseActivity.kt and BaseFragment.kt. The following problems occur when other modules inherit them BaseActivity.kt: MainActivity.kt "
5964	q5964	0.5875659774962483 "Android dagger cannot be provided without an Provides-annotated method"," I decided to learn dependency injection framework. After some tutorials I try to implement dagger into my project. However I got this error I try to solve this for 2 days but with no luck. So here's how I set up my project Here's my app component and here's my appModule class AppModule So what I'm missing with this implementation? "
3037	q3037	0.5867363060000595 "Dagger 2 share object instance between presenters"," I am developing an application that has a few services, including a . I would like to have the same instance in all of my presenters (for each activity). How would I go about doing this? "
5758	q5758	0.5857093619876644 "Android Architecture Blueprints \"todo‑mvp‑dagger\", where is @Provides for TasksRepository?"," Looking at the Android Architecture Blueprints \"todo‑mvp‑dagger\" from here: https://github.com/googlesamples/android-architecture. I'm trying to understand the Dagger2 implementation and I can't seem to figure out how they are getting Dagger2 to provide the TasksRepository. They have for \"provideTasksLocalDataSource\" and \"provideTasksRemoteDataSource\" but where is the one for the actual TaskRepository? In the TodoApplication class they have this: How can it inject this without an @Provides for it anywhere? If I try to use this same approach in my own app I get this error: So I went looking everywhere in the Blueprints code but I can't see how they did it themselves. Is there some trick to it that allows them to not have an ? It definitely builds so they've gotten around it somehow. Someone has asked this same question on the actual github page but there are no answers at the time of writing. https://github.com/googlesamples/android-architecture/issues/561. I'm on the latest commit which at the time of writing is \"082bd72d62472f9caadd2979046067fb928bbfef\". "
609	q609	0.5851482543678618 "Getting a subcomponent instance into an activity"," : : : : How do I get a Builder instance of into ? Activities are created by Dagger, so I can't inject a provider into the constructor like the example given in the official docs. I tried to use the pre dagger-2.7 way of creating subcomponents by add the following line to : and in : which gave me: "
3330	q3330	0.5845707800582668 "Kotlin Dagger 2.11"," I am trying to inject Dagger 2.11 Retrofit in Fragment, but i am not able to inject, 1) The issue is AndroidInjection.inject(this) needs DaggerFragment and i can not change the BaseFragment to DaggerFragment object because it causes issue while replace the fragment 2) I am little confused with dagger architecture too, as i have seen many demo code for dagger 2.11 or above, They are creating Module for each activities. so do i need to create seperate module and component to each activities "
2372	q2372	0.5845707800582668 "Android Dagger: I can't provide an external class without @Inject constructor"," EDIT Solved the issue. See my post below. I'm writing an Android app with use of Dagger and Kotlin. I want to inject class into my class I have a module, which . and a Dagger component: Lastly my : Now, I'm trying to into my : Unfortunately I'm getting compile-time error I don't understand why I'm getting this error, since I'm the . Obviously I cannot add constructor, since I don't own the class. Any help what I'm missing? "
5702	q5702	0.5825133752933879 "Unresolved inject method on Dagger2 method"," I'm trying to inject a set of Room components into a Repository which is itself injected into a ViewModel (which is in a fragment) using Dagger2. The code is as follows. Fragment: View Model: My Repository: Finally for my dagger classes I have two modules: And my AppComponent: Dagger compiles fine, I can access the and build it. However is inaccessible (inspecting the class shows it as private) as are the methods I need to actually inject the dependencies. As a result I get the error: How do I solve this? "
3103	q3103	0.5825133752933879 "Dagger 2 Component with differently scoped modules"," Context I have two Dagger 2 modules: , with scope, that provides an HTTP client; , with a custom scope, that uses the HTTP client to create a consumer for Github's API. Then, I create a Dagger 2 component, to provide the Retrofit client. NetworkModule.kt ApiModule.kt ApiComponent.kt Issue When I try to build the application, if I add the scope to the then I get the following error message: The same happens if I use scope instead of . How should I declare the in order to have a successful build? "
8845	q8845	0.5803118238687514 "lateinit property dispatchingAndroidInjector has not been initialized"," I receive the above error \"lateinit property dispatchingAndroidInjector has not been initialized \" when I run my fragment in dagger2 . The above error is triggered in my application class which is below KotlinTemplateApplication.kt My Fragment class is as below : I called dagger related code in onAttach() method of fragment : RetroDIFragment: My component is as below : RetroComponent : My Module is as below: My Activity is as below I included below code in my Gradle: Can anyone help me in fixing this issue. "
2938	q2938	0.5789552030093037 "Android app clean architecture: Should data layer have its own model classes?"," What´s the best approach when developing an Android app and trying to follow clean architecture guidelines (but not extremely strict - cause that may be overkill for smaller projects). In my case, I am unsure which approach is the best (if there is a best one) regarding the data layer and if the data layer should operate on its own model classes or if it may operate directly on the domain layer models. Also, if the data layer should operate on its own model classes, should data sources like or have their own models (like for an using and a model class with annotations) and then map to data layer models OR should the data layer model itself be the model returned by and (this means the data layer model must be annotated for being able to parse it in case of and ). This is the case in this project: https://github.com/android10/Android-CleanArchitecture/blob/master/data/src/main/java/com/fernandocejas/android10/sample/data/entity/UserEntity.java The following images should clarify the 3 approaches I mean: In Image 1 the and return specific model classes. In the case of the it may look like (using and ): These are then mapped by the Local/Remote data sources to models (which are used by the domain layer). Therefore the repository operates on domain layer models and is breaking boundaries right? That is approach 1. In Image 2 the and still return specific model classes. In the case of the it may look like (using and ): However, these models are then mapped to a data-layer model () which the data-layer operates on. When responding to the domain-layer the maps these ´s to the domain-layer model . This doesn´t break boundaries (right) but it needs some extra mapping in the data-layer. This is approach 2. In Image 3 the and already return the data-layer model . Therefore this model class must contain all annotations needed to parse the API request (with ): If the DB also needs some kind of annotations then these would have to be added to this class too (right?). An advantage of this approach I can think of is that there are fewer model classes (because DB and API directly map to data-layer models). However, doesn´t this blow up the data-layer model class with annotations/properties from all different data sources (DB, API)? Isn´t the whole point of abstracting the data sources from the repository violated then because the data-layer model is dependent on the specific data source implementation (e.g using Gson to parse API request with exact API response names). So this was approach 3. My question is: Which of the 3 approaches is the most flexible and future proof one? "
8526	q8526	0.5732555986700603 "Dagger 1 won't field inject Java class into Kotlin activity"," I have a big project using Dagger 1 and written in Java. I am now adding new activities in Kotlin but I haven't been able to inject a Java class in a Kotlin Activity. Here is my Module Here is SessionStorage : And here is HomeActivity : Here is the error : I don't understand why SessionStorage should not been injected. The only way around it I've found so far is to extend HomeActivity to a JavaActivity and inject SessionStorage there. But I don't think this is the best solution "
3476	q3476	0.5697709054948004 "Android - Kotlin - Dagger 2 - Qualifier Annotation with Member Injection"," I am trying to inject a String into my class that is qualified by an annotation like this: When working with constructor injection, everything is working well. Now, as I am implementing a Service, I need to lazily inject my : My Provider looks like this: The compiler tells me, that I need to implement a -method for my String, although it is in my Object-Graph. I tested this with using in the provider and Service: Dagger can now resolve the String and correctly inject it into my Service. Obviously I am missing something about the Qualifier-Annotation. Can anyone please help out? Thank you. "
1449	q1449	0.5694711802057495 "How to inject mocks with Dagger 2.11"," I am trying to inject mocks using the Android Injector of Dagger 2.11. Before using the Android Inject I used to change the injector in the Application class so I can inject mocks. Like this: And in my tests I used to change the injectorComponent like this: And then I can inject my mocks from MockModule. But now I am using Android Injector form this tutorial: https://medium.com/@iammert/new-android-injector-with-dagger-2-part-1-8baa60152abe Well... now I inject my dependencies like this: So my approach doesn't work anymore... How can I make Dagger injector dependencies from my MockModule? Any help is appreciated! "
1931	q1931	0.5694711802057495 "Dagger injection not working in kotlin"," Someone helps me to point out that why my code does not work. I try to figure out but I cannot find out the problem I try to inject presenter but I got the error: It seems that the presenter has been not injected AppModule AppComponent App This is the MainActivity where I want inject presenter to This is MainActivityPresenter which implements MainActivityContract.Presenter Edit: I managed to solve it myself: For all android beginner as I am. When we declare App extends Application. We must declare it in manifest as well "
4291	q4291	0.5694711802057495 "Room,Kotlin,Dagger 2.15 android.app.Application cannot be provided without an @Inject constructor or from an @Provides-annotated method"," I have the following implementation with dagger for Room Module. This causes an error on injecting the at the class. Following is my Code: App AppModule RoomModule } AppComponent HomeViewModel ResultRepository On building this i'm getting the error as :app:kaptDebugKotlin FAILED FAILURE: Build failed with an exception. "
1588	q1588	0.568362370648408 "Confusing error with Dagger 2 in Android"," I've been trying to set up a dependency injection but there is something that I can't deal with. I almost understand Dagger expect some weird issues like this one. Here is the log error: Here is the code: ApplicationComponent.kt ApplicationModule.kt TorrentComponent.kt TorrentModule.kt NetworkModuke.kt TorrentsActivity.kt Thank you so much! "
3803	q3803	0.5671613666651025 "Spongy Castle RSA Encryption/Decryption with Android Keystore"," Attempting to use SpongyCastle to provide the preferred encryption algorithm of for Asymmetric encryption/decryption tasks on all supported Android device versions and having issues. Encryption appears to be working fine. But decryption is proving some trouble: KeyGen spec is as follows: I'm now grabbing this value from the keyStore and trying to use it for decryption/encryption: This appears to work fine, however decryption is where my issue lies: initialising the decryptionCipher is giving me: Which is strange due to my cipher instance returning fine and encryption working fine. Also tried specifying the provider as “BC” rather than “SC” which gives a which I’m thinking is by design. Trying to give a algorithm that isn't supported will break on the cipher initialisation and Encryption via so what gives? TLDR: The encryption cipher has the same provider as decryption. But only decryption breaks.... There has to be something I’m missing here but can’t seem to put my finger on it. I've been working on this a while so any help is appreciated! Edit: For interest I'm providing SpongyCastle through: "
5794	q5794	0.567150729315754 "Dagger 2 and component dependency in Android"," Activity Application Activity Specific Apply The error I'm getting is that AppComponent has a singleton scope What's the proper solution in this case? "
5205	q5205	0.5632443392738642 "dagger @IntoSet not work in kotlin object?"," I used example in https://google.github.io/dagger/multibindings Module A Module B component test It show error with MyModuleA must be set, but changing module from object to class is work fine. @IntoSet annotation is not work in kotlin object? "
358	q358	0.5632443392738642 "Cannot be Provided Without an @Provides-annotated Method"," There have been many other similar questions, but none of the answers have been applicable to my code. I cannot figure out what I have done wrong. First I have a that is used as a module for the : Then the is built in my class: Then I have an that is used in the (which has as a dependency): Finally, I create a new in the and the : But when I try to build I get the following error, even though I believe the function in is annotated correctly: "
644	q644	0.5632443392738642 "Dagger 2 multibindings with Kotlin"," I have the following snippet in my dagger 2 module I try to inject into in this way But dagger shows an error which says that Dagger cannot provides java.util.Set without @Provides or @Produces method. I did the same in java and it worked. Does somebody know why is it failing? "
6878	q6878	0.5613067677788258 "Unit Testing ViewModel"," I'm trying to use MVVM design pattern and try to do some Unit Test on a View Model. In the View Model the repository implementation is injected. What I'm trying to do is to test the View Model with a mocked repository. This is my code: IntroViewModel UserRepositoryImpl IntroTest I want at the moment of the test to use another UserRepository implementation so that the test will not rely on FirebaseAuth or other source of information. "
5254	q5254	0.5605444869026852 "Dagger: How to provide specific implementation of a parametrized base type?"," I'm new to Dagger and have the following setup: When I build the project, this error comes up: And when I try to provide the entity-specific instances, like this: I get the following: Also I have tried separating the provider methods of fruits & users into their respective modules but latter error also comes up, maybe I'm not hooking up the FruitModule, UserModule and AppModule correctly. I'm having similar problems providing implementations of interfaces. What would be a correct approach here, or is it not at all possible to inject parametrized classes with Dagger? UPDATE I have managed to solve the dependency issue on RepoImpl by explicitly providing each object to be injected (the latter option where we provide and ). I think the @Inject annotation on the constructor was somehow not being registered, so had to refresh the project. However, I cannot figure out how to provide implementations (or sub-types) of parametrized interfaces just yet. Consider for example the ApiService parameter of RepoImpl defined as follows: error: whereas error: How else can I inject these implementations of the interface? "
8451	q8451	0.5601491764975198 "How to use Transformations.map"," I am trying to add architecture components to my project following similar design patterns from google samples here. Below is the ViewModel and Repository from GoogleSamples. ViewModel from googleSamples Repository from googleSamples My repository. blogPosts() similar to postsOfSubreddit() needs no arguments and returns similar things to the ones above. blogPosts() is called in my ViewModel which is also like one above excepts it doesn't need to pass subreddit name. How would I use Transform.map() in my case to transform data without passing any arguments to repository function using similar design. "
5440	q5440	0.5588307348161508 "kotlin.UninitializedPropertyAccessException: lateinit property pref has not been initialized"," i know this question has been answered [Here] (lateinit property has not been initialized that was due to butter knife library problem But my case is different. completely different. In my case when i use dagger injected properties in my base activity it shows me error Caused by: kotlin.UninitializedPropertyAccessException: lateinit property pref has not been initialized But same property when i use in my sub activity(Login activity) it works fine. eg. pref.setLanguage(\"abc\") -> it works fine in login activity but throws error in base activity Sharing my code. Please help BaseActivity LoginActivity AppModule Builder Module AppComponent } "
2660	q2660	0.5580556544867465 "Dagger 2 + Kotlin can't inject Presenter into View"," I am trying to create simple MVP Archtecture app using Dagger 2. I am tying to achieave same result as in this tutorial, but with Kotlin. Here is my code so far. Presenter: View: Dagger Module: Dagger Component: The problem is that I am getting build error which starts with this: PS, my gradle dagger config: EDIT: Changed injected presenter type from IMainView to MainView. "
7624	q7624	0.5551319911500439 "Android Mockito kotlin.UninitializedPropertyAccessException: lateinit property dataManager has not been initialized"," I constantly get in my Mockito test. But the app works just fine. Note: I don't want to inject presenter into activity. Thanks in advance! Here's my Activity: And here's my Presenter: Here's my DataManager: and AppDataManager: and finally my test that's failing: gradle file: My module class: Actual error is kotlin.UninitializedPropertyAccessException: lateinit property dataManager has not been initialized "
3227	q3227	0.5550078770780097 "Can't Provide Qualified String with Dagger2"," I'm trying to follow the sample here I have already used Dagger2 with the AndroidInjector successfully but now I was experimenting the new and . I get the error: I don't think that the new Dagger classes are causing the issue. If I remove the in BuildModule.kt the code compiles. Any suggestion? Here the code: The AppComponent.kt The AppModule.kt The BuildModule.kt The DeviceModel.kt The MainActivitySubComponent.kt The *MainActivity.kt** The App.kt "
2304	q2304	0.5524886788441982 "Easy way for mapping data models to domain models"," I'm following the pattern in which we have the 3 layers (, , ). Every layer should have its own model and these models should be converted when they are passed to another layer using a mapper. I wanted to know if there is an easy way (a library?) to map a to a without creating a , specially if my has a lot of fields (like 40-50). Edit I already tried ModelMapper and DozerMapper but apparently they don't work well on Android (ModelMapper issue and DozerMapper issue). Thanks in advance. "
454	q454	0.5501608121916675 "Dagger + Kotlin not injecting"," I studying Dagger 2 for DI and I just did this code to inject the Retrofit: NetModule.kt AppModule.kt NetComponent.kt: CustomApplication.kt Then in my activity: So, this code should work, right? The dependency should be added... But when I run my app... I get this: So the Retrofit is not being injected. What am I missing? Any help is welcome! "
